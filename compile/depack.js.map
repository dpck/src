{
"version":3,
"file":"compile/depack.js",
"lineCount":1445,
"mappings":"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",
"sources":["node_modules/fs/index.js","node_modules/stream/index.js","node_modules/erotic/src/lib.js","node_modules/os/index.js","node_modules/@artdeco/clean-stack/src/index.js","node_modules/erotic/src/callback.js","node_modules/erotic/src/index.js","node_modules/catchment/src/lib/index.js","node_modules/catchment/src/index.js","node_modules/@wrote/read/src/index.js","node_modules/@wrote/write/src/index.js","node_modules/makepromise/src/index.js","node_modules/path/index.js","node_modules/@wrote/ensure-path/src/index.js","node_modules/@wrote/read-dir-structure/src/index.js","node_modules/@wrote/rm/src/index.js","node_modules/@wrote/exists/src/index.js","node_modules/erte/src/index.js","node_modules/module/index.js","node_modules/resolve-dependency/src/index.js","node_modules/mismatch/src/index.js","node_modules/@depack/detect/src/index.js","node_modules/@depack/split/src/index.js","node_modules/fpj/src/index.js","node_modules/static-analysis/src/lib.js","node_modules/static-analysis/src/index.js","node_modules/paddys/src/index.js","node_modules/frame-of-mind/src/index.js","src/lib/index.js","src/lib/closure.js","node_modules/indicatrix/src/index.js","src/lib/run.js","node_modules/child_process/index.js","node_modules/spawncommand/src/index.js","src/lib/compile.js","node_modules/vm/index.js","node_modules/@a-la/detect-jsx/src/lib/index.js","node_modules/@a-la/detect-jsx/src/index.js","node_modules/restream/src/lib/index.js","node_modules/restream/src/SyncReplaceable.js","node_modules/restream/src/lib/markers.js","node_modules/restream/src/Replaceable.js","node_modules/@a-la/jsx/src/lib/index.js","node_modules/@a-la/jsx/src/lib/extract.js","node_modules/@a-la/jsx/src/lib/parse-content.js","node_modules/@a-la/jsx/src/lib/components.js","node_modules/@a-la/jsx/src/index.js","node_modules/@depack/bundle/src/lib/BundleTransform.js","node_modules/@depack/bundle/src/lib/lib.js","node_modules/@depack/bundle/src/lib/index.js","node_modules/@depack/bundle/src/index.js","src/lib/bundle.js","src/lib/chunks.js","src/index.js","src/depack.js","src/lib/get-options.js"],
"sourcesContent":["export default fs\nexport const {\n  ReadStream,\n  Stats,\n  WriteStream,\n  access,\n  accessSync,\n  appendFile,\n  appendFileSync,\n  chmod,\n  chmodSync,\n  chown,\n  chownSync,\n  close,\n  closeSync,\n  constants,\n  copyFile,\n  copyFileSync,\n  createReadStream,\n  createWriteStream,\n  exists,\n  existsSync,\n  fchmod,\n  fchmodSync,\n  fchown,\n  fchownSync,\n  fdatasync,\n  fdatasyncSync,\n  fstat,\n  fstatSync,\n  fsync,\n  fsyncSync,\n  ftruncate,\n  ftruncateSync,\n  futimes,\n  futimesSync,\n  lchmod,\n  lchmodSync,\n  lchown,\n  lchownSync,\n  link,\n  linkSync,\n  lstat,\n  lstatSync,\n  mkdir,\n  mkdirSync,\n  mkdtemp,\n  mkdtempSync,\n  open,\n  openSync,\n  read,\n  readFile,\n  readFileSync,\n  readSync,\n  readdir,\n  readdirSync,\n  readlink,\n  readlinkSync,\n  realpath,\n  realpathSync,\n  rename,\n  renameSync,\n  rmdir,\n  rmdirSync,\n  stat,\n  statSync,\n  symlink,\n  symlinkSync,\n  truncate,\n  truncateSync,\n  unlink,\n  unlinkSync,\n  unwatchFile,\n  utimes,\n  utimesSync,\n  watch,\n  watchFile,\n  write,\n  writeFile,\n  writeFileSync,\n  writeSync,\n} = fs","export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","const getLastItem = (array) => {\n  const item = array[array.length - 1]\n  return item\n}\nconst getItemsFrom = (array, from) => array.slice(from)\n\n/**\n * Get a segment of the stack string, defaults are from = 0 and oneLine = false.\n * @param {string} stack the stack string\n * @param {number} [from=0] index from which to slice from\n * @param {boolean} [oneLine=false] Whether just first line must be returned\n * @returns {string} A stack segment starting from the specified line.\n */\nexport const getStackSegment = (stack, from = 0, oneLine = false) => {\n  if (from === 0 && !oneLine) {\n    return stack\n  }\n  const splitStack = stack\n    .split('\\n', oneLine ? from + 1 : undefined)\n  if (oneLine) {\n    const line = getLastItem(splitStack)\n    return line\n  } else {\n    const items = getItemsFrom(splitStack, from)\n    return items.join('\\n')\n  }\n}\n\n/**\n * Get the stack trace part of when the erotic function was called. Disregards\n * first two lines.\n * @param {string} stack error's stack\n * @param {boolean} [transparent] trim the top line as well\n * @returns {string} A part of stack\n */\nexport const getEntryStack = (stack, transparent = false) => {\n  const stackSegment = getStackSegment(stack, 2 + (transparent ? 1 : 0))\n  return stackSegment\n}\n\n/**\n * Get stack line of where the callback was called.\n * @param {string} stack Stack string.\n * @returns {string} Stack line.\n */\nexport const getCalleeStackLine = (stack) => {\n  const calleeStackLine = getStackSegment(stack, 2, true)\n  return calleeStackLine\n}\n\nexport const getStackHeading = message => `Error: ${message}`\n\n/**\n * Extract caller from the function's `arguments`.\n * @param {Object} args arguments\n * @returns {!Function} The caller function from `arguments.callee.caller`.\n */\nexport const getCallerFromArguments = (args) => {\n  const { callee: { caller } } = args\n  return caller\n}","export default os\nexport const {\n  EOL,\n  arch,\n  constants,\n  cpus,\n  endianness,\n  freemem,\n  homedir,\n  hostname,\n  loadavg,\n  networkInterfaces,\n  platform,\n  release,\n  tmpdir,\n  totalmem,\n  type,\n  uptime,\n  userInfo,\n} = os","import { homedir } from 'os'\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:IGNORED_MODULES)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/\n\nconst homeDir = homedir()\n\n/**\n * Remove internal Node.JS lines from the error stack traces.\n * @param {string} stack The error stack to update.\n * @param {!_cleanStack.Config} [options] Options for the program.\n * @param {boolean} [options.pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @param {!Array<string>} [options.ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\nconst cleanStack = (stack, options) => {\n  const {\n    pretty = false, ignoredModules = ['pirates'],\n  } = options || {}\n  const j = ignoredModules.join('|')\n  const re = new RegExp(pathRegex.source.replace('IGNORED_MODULES', j))\n\n  return stack.replace(/\\\\/g, '/')\n    .split('\\n')\n    .filter(x => {\n      const pathMatches = x.match(extractPathRegex)\n      if (pathMatches === null || !pathMatches[1]) {\n        return true\n      }\n\n      const match = pathMatches[1]\n\n      // Electron\n      if (match.includes('.app/Contents/Resources/electron.asar') ||\n        match.includes('.app/Contents/Resources/default_app.asar')) {\n        return false\n      }\n\n      return !re.test(match)\n    })\n    .filter(x => x.trim())\n    .map(x => {\n      if (pretty) {\n        return x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')))\n      }\n\n      return x\n    })\n    .join('\\n')\n}\n\nexport default cleanStack\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_cleanStack.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _cleanStack.Config Options for the program.\n * @prop {boolean} [pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @prop {!Array<string>} [ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\n","import cleanStack from '@artdeco/clean-stack'\nimport {\n  getCallerFromArguments, getCalleeStackLine, getStackHeading,\n} from './lib'\n\n/**\n * Create a callback.\n * @param {!Function} entryCaller The function which was called at entry.\n * @param {string} entryStack The first line of the error stack to be returned\n * @param {boolean} [shadow=false] Print only entry stack.\n */\nexport function makeCallback(entryCaller, entryStack, shadow = false) {\n  /**\n   * This callback should be called when an asynchronous error occurred.\n   * @param {(string|Error)} messageOrError A message string or an _Error_ object at the point of actual error.\n   * @returns {Error} An error with the updated stack which includes the callee.\n   */\n  function cb(messageOrError) {\n    const caller = getCallerFromArguments(arguments)\n    const { stack: errorStack } = new Error()\n    const calleeStackLine = getCalleeStackLine(errorStack)\n    const isError = messageOrError instanceof Error\n    const message = isError ? messageOrError.message : messageOrError\n\n    const stackHeading = getStackHeading(message)\n    const entryHasCallee = caller !== null && entryCaller === caller\n    const stackMessage = [\n      stackHeading,\n      ...(entryHasCallee || shadow ? [entryStack] : [\n        calleeStackLine,\n        entryStack,\n      ]),\n    ].join('\\n')\n\n    const stack = cleanStack(stackMessage)\n    const properties = { message, stack }\n    const e = isError ? messageOrError : new Error()\n\n    return /** @type {Error} */ (Object.assign(/** @type {!Object} */ (e), properties))\n  }\n\n  return cb\n}","import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Returns a function to create an error with a stack trace starting at the line in code when the call was made by the callee.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}","/**\n * Listens for the `error` event once so that when an error in _streamB_ is emitted, is is also emitted in the _streamA_.\n * @param {stream.Stream} streamA The stream that will emit an error once it's caught in the `streamB`.\n * @param {stream.Stream} streamB The stream from which the error originates.\n * @returns The stream the error is listened on, i.e., transparent to calling the `.once` method on that stream.\n */\nexport const pipeError = (streamA, streamB) => {\n  streamB\n    .once('error', e => {\n      streamA.emit('error', e)\n    })\n  return streamB\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import { Writable } from 'stream'\nimport erotic from 'erotic'\nimport cleanStack from '@artdeco/clean-stack'\nimport { pipeError } from './lib'\n\nfunction joinBufferData(array) {\n  return array.join('')\n}\n\n/**\n * A writable stream which collects incoming data into memory, and provides a promise to way for the stream to finish. The promise is resolved with joined chunks.\n */\nexport default class Catchment extends Writable {\n  /**\n   * Create a new catchment to pipe a readable stream into and collect all emitted data.\n   * @param {!_catchment.Options} [options] Options to pass to the `Writable` super constructor, and others shown below.\n   * @param {!stream.Readable} [options.rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n   * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n   * @example\n   *\n   * import { createReadStream } from 'fs'\n   * import Catchment from 'catchment'\n   *\n   * const rs = createReadStream('file.txt')\n   * const { promise } = new Catchment({ rs })\n   * const res = await promise\n   */\n  constructor(options) {\n    const {\n      binary = false, rs = null, ...opts\n    } = options || {}\n    /** @suppress {missingProperties} */\n    const { er = erotic(true), proxyError } = options || {}\n    const wrap = (_, e) => er(e)\n    super(/** @type {!stream.WritableOptions} */ (opts))\n    this._caughtData = []\n    this._promise = new Promise((r, j) => {\n      this.on('finish', () => {\n        let d\n        if (binary) {\n          d = Buffer.concat(this._caughtData)\n        } else {\n          d = joinBufferData(this._caughtData)\n        }\n        r(d)\n        this._caughtData = []\n      })\n      this.once('error', (e) => {\n        if (e.stack.indexOf('\\n') == -1) {\n          wrap`${e}`\n          j(e)\n        } else {\n          const stack = cleanStack(e.stack)\n          e.stack = stack\n          if (proxyError) wrap`${e}`\n          j(e)\n        }\n      })\n      if (rs) {\n        pipeError(this, rs).pipe(this)\n      }\n    })\n  }\n  _write(chunk, encoding, callback) {\n    this._caughtData.push(chunk)\n    callback()\n  }\n  /**\n   * A promise which will resolve will all data when the stream finishes.\n   * @type {Promise<string|Buffer>}\n   */\n  get promise() {\n    return this._promise\n  }\n}\n\n/**\n * Collect data into a catchment, and return results when the stream finishes.\n * @param {stream.Readable} readable A readable stream to collect all data from. If an error occurs during reading of this stream, the promise will be rejected with it.\n * @param {_catchment.CollectOptions} options Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @param {boolean} [options.proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n * @example\n *\n * import { collect } from 'catchment'\n * import { createReadStream } from 'fs'\n *\n * const rs = createReadStream(path)\n * await collect(rs, { proxyError: true })\n */\nexport const collect = async (readable, options = {}) => {\n  const { promise } = new Catchment({\n    rs: readable,\n    ...options,\n    er: erotic(true),\n  })\n  const res = await promise\n  return res\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.Options} Options Options to pass to the `Writable` super constructor, and others shown below.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.Options Options to pass to the `Writable` super constructor, and others shown below.\n * @prop {!stream.Readable} [rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n\n/* typal types/collect.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.CollectOptions} CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @prop {boolean} [proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n */\n","import { createReadStream } from 'fs'\nimport { collect } from 'catchment'\n\n/**\n * Read a file.\n * @param {string} path The path to the file to read.\n */\nexport default async function read(path) {\n  const rs = createReadStream(path)\n  /** @type {string} */\n  const res = await collect(rs)\n  return res\n}\n\n/**\n * Read a file as a buffer.\n * @param {string} path The path to the file to read.\n */\nexport async function readBuffer(path) {\n  const rs = createReadStream(path)\n  /** @type {Buffer} */\n  const res = await collect(rs, { binary: true })\n  return res\n}","import { createWriteStream } from 'fs'\nimport erotic from 'erotic'\n\n/**\n * Write a file to the filesystem.\n * @param {string} path The path of the file to write.\n * @param {string|Buffer} data The data to write.\n */\nexport default async function write(path, data) {\n  if (!path) throw new Error('No path is given.')\n  const er = erotic(true)\n  const ws = createWriteStream(path)\n  await new Promise((r, j) => {\n    ws\n      .on('error', (e) => {\n        const err = er(e)\n        j(err)\n      })\n      .on('close', r)\n      .end(data)\n  })\n}","import erotic from 'erotic'\n\n// /**\n//  * @param {number} length\n//  * @param {number} i\n//  * @param {!Function} fn\n//  */\n// function checkArgumentIndex(length, i, fn) {\n//   if (i > length - 2) {\n//     throw new Error(`Function${fn.name ? ` ${fn.name}` : ''} does not accept that many arguments (max ${length - 1} + callback).`)\n//   }\n// }\n\n/**\n * Get a promise from a function which otherwise accepts a callback.\n * @param {Function} fn A function to promisify.\n * @param {*|Array<*>} [args] An array of arguments to use in the call, or a single argument.\n * @param {*} [resolveValue] A value to override the value with which the promise will be resolved.\n * @returns {Promise<*>} A promise resolved on callback invocation without an error and rejected on callback called with an error.\n */\nexport default async function makePromise(fn, args, resolveValue) {\n  const er = erotic(true)\n  if (typeof fn != 'function') {\n    throw new Error('Function must be passed.')\n  }\n  const { length: fnLength } = fn\n  if (!fnLength) {\n    throw new Error(`Function${fn.name ? ` ${fn.name}` : ''} does not accept any arguments.`)\n  }\n\n  const res = await new Promise((resolve, reject)=> {\n    const cb = (err, res) => {\n      if (err) {\n        const error = er(err)\n        return reject(error)\n      }\n      return resolve(resolveValue || res)\n    }\n\n    let allArgs = [cb]\n\n    if (Array.isArray(args)) {\n      // args.forEach((arg, i) => {\n      //   checkArgumentIndex(fnLength, i, fn)\n      // })\n      allArgs =  [...args, cb]\n    } else if (Array.from(arguments).length > 1) { // args passed as a single argument, not array\n      // checkArgumentIndex(fnLength, 0, fn)\n      allArgs = [args, cb]\n    }\n    fn(...allArgs)\n  })\n  return res\n}","export default path\nexport const {\n  basename,\n  delimiter,\n  dirname,\n  extname,\n  format,\n  isAbsolute,\n  join,\n  normalize,\n  parse,\n  posix,\n  relative,\n  resolve,\n  sep,\n  win32,\n} = path","import { mkdir, mkdirSync } from 'fs'\nimport makePromise from 'makepromise'\nimport { dirname } from 'path'\n\n/**\n * Makes sure that a file can be created by creating all directories to which it belongs to, e.g., `ensurePath('~/path/to/wrote.data')` will attempt to create `~/path/to` directory recursively.\n * @param {string} path The path to the file.\n * @throws {Error} When the first folder in the path is non-executable.\n */\nexport default async function ensurePath(path) {\n  const dir = dirname(path)\n  try {\n    await make(dir)\n    return path\n  } catch (err) {\n    if (/EEXIST/.test(err.message) && err.message.indexOf(dir) != -1) {\n      return path\n    }\n    throw err\n  }\n}\n\n/**\n * Recursive promise-based mkdir.\n * @param {string} dir Path to the directory to be created\n */\nasync function make(dir) {\n  try {\n    await makePromise(mkdir, dir)\n  } catch (err) {\n    if (err.code == 'ENOENT') {\n      const parentDir = dirname(dir)\n      await make(parentDir)\n      await make(dir)\n    } else if (err.code != 'EEXIST') { // created in parallel\n      throw err\n    }\n  }\n}\n\n/**\n * Makes sure that a file can be created by creating all directories to which it belongs to synchronously, e.g., `ensurePath('~/path/to/wrote.data')` will attempt to create `~/path/to` directory recursively.\n * @param {string} path The path to the file.\n * @throws {Error} When the first folder in the path is non-executable.\n */\nexport function ensurePathSync(path) {\n  const dir = dirname(path)\n  try {\n    makeSync(dir)\n    return path\n  } catch (err) {\n    if (/EEXIST/.test(err.message) && err.message.indexOf(dir) != -1) {\n      return path\n    }\n    throw err\n  }\n}\n\n/**\n * Recursive promise-based mkdir.\n * @param {string} dir Path to the directory to be created\n */\nfunction makeSync(dir) {\n  try {\n    mkdirSync(dir)\n  } catch (err) {\n    if (err.code == 'ENOENT') {\n      const parentDir = dirname(dir)\n      makeSync(parentDir)\n      makeSync(dir)\n    } else if (err.code != 'EEXIST') { // created in parallel\n      throw err\n    }\n  }\n}","import { lstat, readdir } from 'fs'\nimport makePromise from 'makepromise'\nimport { join, relative } from 'path'\n\n/**\n * Update information about directory's content with lstat.\n * @param {string} dirPath Path to the root directory\n * @param {!Array<string>} dirContent\n * @returns {!Promise<!Array<!_wrote.File>>} An array with file objects.\n */\nasync function lstatFiles(dirPath, dirContent) {\n  const readFiles = dirContent.map(async (relativePath) => {\n    const path = join(dirPath, relativePath)\n    const ls = await makePromise(lstat, path)\n    return {\n      lstat: ls,\n      path,\n      relativePath,\n    }\n  })\n  const res = await Promise.all(readFiles)\n  return res\n}\n\n/**\n * Check if lstat result is a directory\n * @param {!_wrote.File} lstatRes\n * @param {!fs.Stats} lstatRes.lstat The stats of the item.\n * @param {string} lstatRes.path The full path of the item.\n * @param {string} lstatRes.relativePath The name of the item.\n * @returns {boolean} true if is a directory\n */\nconst isDirectory = lstatRes => lstatRes.lstat.isDirectory()\n/**\n * Check if lstat result is not a directory\n * @param {!_wrote.File} lstatRes\n * @param {!fs.Stats} lstatRes.lstat The stats of the item.\n * @param {string} lstatRes.path The full path of the item.\n * @param {string} lstatRes.relativePath The name of the item.\n * @returns {boolean} true if is not a directory\n */\nconst isNotDirectory = lstatRes => !lstatRes.lstat.isDirectory()\n\nconst getType = (lstatRes) => {\n  if (lstatRes.lstat.isDirectory()) {\n    return 'Directory'\n  }\n  if (lstatRes.lstat.isFile()) {\n    return 'File'\n  }\n  if (lstatRes.lstat.isSymbolicLink()) {\n    return 'SymbolicLink'\n  }\n}\n\n/**\n * Read a directory, and return its structure as an object. Only `Files`, `Directories` and `Symlinks` are included!\n * @param {string} dirPath Path to the directory.\n * @param {!_wrote.ReadDirStructureOpts} [opts] Options for reading the dir structure.\n * @param {!Array<string>} [opts.ignore] The list of paths inside of the directory to ignore, e.g., `[.git]`.\n * @returns {!Promise<!_wrote.DirectoryStructure>} An object reflecting the directory structure.\n * @example\n  ```js\n  const res = await readDirStructure('dir')\n  // result:\n  {\n    type: 'Directory',\n    content: {\n      'data.txt': {\n        type: 'File'\n      },\n      subdir: {\n        type: 'Directory',\n        content: {\n          'data-ln.txt': {\n            type: 'SymbolicLink'\n          },\n        }\n      }\n    }\n  }\n  ```\n */\nexport default async function readDirStructure(dirPath, opts = {}) {\n  if (!dirPath) {\n    throw new Error('Please specify a path to the directory')\n  }\n  const { ignore = [] } = opts\n  const ls = await makePromise(lstat, dirPath)\n  if (!ls.isDirectory()) {\n    const err = new Error('Path is not a directory')\n    err.code = 'ENOTDIR'\n    throw err\n  }\n  const dir = /** @type {!Array<string>} */ (await makePromise(readdir, dirPath))\n  const lsr = await lstatFiles(dirPath, dir)\n\n  const directories = lsr.filter(isDirectory) // reduce at once\n  const notDirectories = lsr.filter(isNotDirectory)\n\n  const files = notDirectories.reduce((acc, current) => {\n    const type = getType(current)\n    return {\n      ...acc,\n      [current.relativePath]: {\n        type,\n      },\n    }\n  }, {})\n\n  const dirs = await directories.reduce(async (acc, { path, relativePath }) => {\n    const rel = relative(dirPath, path)\n    if (ignore.includes(rel)) return acc\n    const res = await acc\n    const structure = await readDirStructure(path)\n    return {\n      ...res,\n      [relativePath]: structure,\n    }\n  }, {})\n\n  const content = {\n    ...files,\n    ...dirs,\n  }\n  return {\n    content,\n    type: 'Directory',\n  }\n}\n\n/**\n * After running the `readDirStructure`, this function can be used to flatten the `content` output and return the list of all files (not including symlinks).\n * @param {!_wrote.Content} content The recursive content of the directory.\n * @param {string} path The path to the directory.\n */\nexport const getFiles = (content, path) => {\n  let files = []\n  let dirs = []\n  Object.keys(content).forEach((key) => {\n    const { type } = content[key]\n    if (type == 'File') files.push(join(path, key))\n    else if (type == 'Directory') dirs.push(key)\n  })\n  const dirFiles = dirs.reduce((acc, dir) => {\n    const { content: c } =\n      /** @type {!_wrote.Content} */ (content[dir])\n    const f = getFiles(c, join(path, dir))\n    return [...acc, ...f]\n  }, [])\n  return [...files, ...dirFiles]\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').Content} _wrote.Content\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').ReadDirStructureOpts} _wrote.ReadDirStructureOpts\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').DirectoryStructure} _wrote.DirectoryStructure\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').File} _wrote.File\n */","import { unlink, rmdir, lstat } from 'fs'\nimport readDirStructure from '@wrote/read-dir-structure'\nimport makePromise from 'makepromise'\nimport { join } from 'path'\n\nconst removeFile = async (path) => {\n  await makePromise(unlink, path)\n}\n\n/**\n * Removes files and directories.\n * @param {string} path Path to remove.\n */\nconst removeDir = async (path) => {\n  const { content } = await readDirStructure(path)\n  const files = Object.keys(/** @type {!Object} */ (content))\n    .filter((k) => {\n      const { type } = content[k]\n      if (type == 'File' || type == 'SymbolicLink') return true\n    })\n  const dirs = Object.keys(/** @type {!Object} */ (content))\n    .filter((k) => {\n      const { type } = content[k]\n      if (type == 'Directory') return true\n    })\n  const filesFullPaths = files.map(file => join(path, file))\n  await Promise.all(\n    filesFullPaths.map(removeFile)\n  )\n  const dirsFullPaths = dirs.map(dir => join(path, dir))\n  await Promise.all(\n    dirsFullPaths.map(removeDir)\n  )\n  await makePromise(rmdir, path)\n}\n\n/**\n * Removes a path from the filesystem.\n * @param {string} path Path to the file or directory to remove.\n */\nconst rm = async (path) => {\n  const s = /** @type {!fs.Stats} */ (\n    await makePromise(lstat, path)\n  )\n  if (s.isDirectory()) {\n    await removeDir(path)\n  } else {\n    await removeFile(path)\n  }\n}\n\nexport default rm\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */\n\n/* documentary types/index.xml */\n","import makePromise from 'makepromise'\nimport { lstat } from 'fs'\n\n/**\n * Check If The File Or Directory Exists, And Return Stats.\n * @param {string} path The path to check for existence.\n */\nconst exists = async (path) => {\n  try {\n    const ls = /** @type {fs.Stats} */ (await makePromise(lstat, path))\n    return ls\n  } catch (err) {\n    return null\n  }\n}\n\nexport default exists\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */","import Diff from './diff'\n\nconst colors = {\n  'black': 30,\n  'red': 31,\n  'green': 32,\n  'yellow': 33,\n  'blue': 34,\n  'magenta': 35,\n  'cyan': 36,\n  'white': 37,\n  'grey': 90,\n}\n\nconst backgroundColors = {\n  'black': 40,\n  'red': 41,\n  'green': 42,\n  'yellow': 43,\n  'blue': 44,\n  'magenta': 45,\n  'cyan': 46,\n  'white': 47,\n}\n\n/**\n * Color the foreground.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function c(string, color) {\n  const cc = colors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Color the background.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function b(string, color) {\n  const cc = backgroundColors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Compares two strings and outputs a coloured version where strings don't match.\n * @param {string} source A string to compare.\n * @param {string} target Target string to compare with.\n * @returns {string} A string which uses shell-codes to highligh differences.\n */\nexport default function erte(source, target) {\n  const diff = new Diff()\n  const d = diff.diff(source, target)\n  const m = d.map(({ added, removed, value }) => {\n    let p\n    const s = value.split(' ')\n    if (added) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'green')).join(b(' ', 'green'))\n    } else if (removed) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'red')).join(b(' ', 'red'))\n    } else {\n      p = c(value, 'grey')\n    }\n    return p\n  })\n  const s = m.join('')\n  return s\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_erte.Color} Color The color to apply.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {('black'|'red'|'green'|'yellow'|'blue'|'magenta'|'cyan'|'white'|'grey')} _erte.Color The color to apply.\n */\n","export default _module\nexport const {\n  Module,\n  builtinModules,\n  runMain,\n  wrap,\n} = _module","import exists from '@wrote/exists'\nimport { dirname, join, relative } from 'path'\n\n/**\n * For the given local path that can omit the JS/JSX extension and point to a directory (e.g., `./lib` or `./lib/example`), find that file on the filesystem.\n * @param {string} path The dependency path, to resolve e.g., `./lib`.\n * @param {string} [relativeFrom] The optional path of the file that imports the given path.\n */\nconst resolveDependency = async (path, relativeFrom) => {\n  if (relativeFrom) {\n    const d = dirname(relativeFrom)\n    path = join(d, path)\n  }\n  let e = await exists(path)\n  let res = path\n  let isDir = false\n  if (!e) {\n    res = await checkSources(path)\n    if (!res) throw new Error(`${path}.js or ${path}.jsx is not found.`)\n  } else if (e.isDirectory()) {\n    // first try file\n    let fileChecked = false\n    let fileRes\n    if (!path.endsWith('/')) {\n      fileRes = res = await checkSources(path)\n      fileChecked = true\n    }\n    if (!fileRes) {\n      res = await checkSources(join(path, 'index'))\n      if (!res) {\n        const s = fileChecked ? `${path}.jsx? does not exist, and ` : ''\n        throw new Error(`${s}index.jsx? file is not found in ${path}`)\n      }\n      isDir = true\n    }\n  }\n  return {\n    path: path.startsWith('.') ? relative('', res) : res,\n    isDir,\n  }\n}\n\nconst checkSources = async (path) => {\n  let pp = `${path}.js`\n  let e = await exists(pp)\n  if (!e) pp = `${pp}x`; e = await exists(pp)\n  if (e) return pp\n}\n\nexport default resolveDependency","/**\n * Returns an array of captured groups of a regular expression as objects. Does not modify the `lastIndex` property of the regex.\n * @param {RegExp} re The regular expression used for matching.\n * @param {string} string String to find matches in.\n * @param {Array<string>} keys Keys to use to create an captured group object.\n * @param {boolean} addPositions Whether to include positions in the return.\n * @example\n *\n```js\nconst re = /(test) inside of a (string)(\\d)?/ig\nconst s = 'Test inside of a STRING1. TEST inside of a string.'\nconst keys = ['test', 'string', 'number']\nconst res = mismatch(re, s, keys)\n\n// result:\n[\n {\n   test: 'Test',\n   string: 'STRING',\n   number: '1',\n },\n {\n   test: 'TEST',\n   string: 'string',\n },\n]\n```\n */\nexport default function mismatch(re, string, keys, addPositions = false) {\n  /** @type {!Array<!Object<string, string>>} */\n  const m = []\n  string.replace(re, (match, ...args) => {\n    // remove position and input\n    const position = args[args.length - 2]\n    const start = addPositions ? { position } : {}\n    const p = args.slice(0, args.length - 2)\n    const o = p.reduce((acc, capturedGroup, i) => {\n      const key = keys[i]\n      if (!(key && capturedGroup !== undefined)) return acc\n      acc[key] = capturedGroup\n      return acc\n    }, start)\n    m.push(o)\n  })\n  return m\n}","import mismatch from 'mismatch'\n\nconst RE = /^ *import(?:\\s+(?:[^\\s,]+)\\s*,?)?(?:\\s*{(?:[^}]+)})?\\s+from\\s+(['\"])(.+?)\\1/gm\nconst RE2 = /^ *import\\s+(?:.+?\\s*,\\s*)?\\*\\s+as\\s+.+?\\s+from\\s+(['\"])(.+?)\\1/gm\nconst RE3 = /^ *import\\s+(['\"])(.+?)\\1/gm\nconst RE4 = /^ *export\\s+(?:{[^}]+?}|\\*)\\s+from\\s+(['\"])(.+?)\\1/gm\n\n/**\n * Returns the names of the modules imported with `import` and `export` statements.\n * @param {string} source The source to detect matches in.\n */\nconst getMatches = (source) => {\n  const res = [RE, RE2, RE3, RE4].reduce((acc, re) => {\n    const m = mismatch(re, source, ['q', 'from'])\n      .map(a => a['from'])\n    return [...acc, ...m]\n  }, [])\n  return res\n}\n\nexport default getMatches\n\nexport const RES = {\n  RE, RE2, RE3, RE4,\n}","/**\n * Splits the package name possibly with scope and returns the name and the\n * path within that page that was required.\n * @param {string} from The package, e.g., `@depack/depack/src`, or `depack`.\n */\nconst split = (from) => {\n  let [scope, name, ...paths] = from.split('/')\n  if (!scope.startsWith('@') && name) {\n    paths = [name, ...paths]\n    name = scope\n  } else if (!scope.startsWith('@')) {\n    name = scope\n  } else {\n    name = `${scope}/${name}`\n  }\n  return { name, paths: paths.join('/') }\n}\n\nexport default split","import { join, relative, resolve, dirname, parse } from 'path'\r\nimport exists from '@wrote/exists'\r\nimport read from '@wrote/read'\r\nimport resolveDep from 'resolve-dependency'\r\n\r\nlet ROOT\r\n\r\n/**\r\n * Finds the location of the `package.json` for the given dependency in the directory, and its entry file.\r\n * @param {string} dir The path to the directory where the requiring file is located.\r\n * @param {string} name The name of the required package.\r\n * @param {!_fpj.Config} opts The options for `fpj`.\r\n * @param {!Array<string>} [opts.fields] Any additional fields from `package.json` file to return.\r\n * @param {boolean} [opts.soft=false] If the entry export (main or module) does not exist, `soft` mode will not throw an error, but add the `hasEntry` property to the output set to _false_. Default `false`.\r\n * @returns {!Promise<!_fpj.Return>}\r\n */\r\nconst findPackageJson = async (dir, name, opts = {}) => {\r\n  if (!ROOT) {\r\n    ({ root: ROOT } = parse(process.cwd()))\r\n  }\r\n  const { fields, soft = false } = opts\r\n  const fold = join(dir, 'node_modules', name)\r\n  const path = join(fold, 'package.json')\r\n  const e = await exists(path)\r\n  if (e) {\r\n    const res = await findEntry(path, fields)\r\n    if (res === undefined)\r\n      throw new Error(`The package ${relative('', path)} does export the module.`)\r\n    else if (!res.entryExists && !soft)\r\n      throw new Error(`The exported module ${res.main} in package ${name} does not exist.`)\r\n    const { entry, version, packageName, main, entryExists, ...rest } = res\r\n    const result = /** @type {!_fpj.Return} */ ({\r\n      entry: relative('', entry),\r\n      packageJson: relative('', path),\r\n      ...(version ? { version } : {}),\r\n      packageName,\r\n      ...(main ? { hasMain: true } : {}),\r\n      ...(!entryExists ? { entryExists: false } : {}),\r\n      ...rest,\r\n    })\r\n    return result\r\n  }\r\n  if (dir == ROOT && !e)\r\n    throw new Error(`Package.json for module ${name} not found.`)\r\n  return findPackageJson(join(resolve(dir), '..'), name, opts)\r\n}\r\n\r\n/**\r\n * Finds the path to the entry based on package.json file.\r\n * @param {string} path\r\n * @param {!Array<string>} fields\r\n */\r\nexport const findEntry = async (path, fields = []) => {\r\n  const f = await read(path)\r\n  let mod, version, packageName, main, rest\r\n  try {\r\n    ({\r\n      'module': mod,\r\n      'version': version,\r\n      'name': packageName,\r\n      'main': main,\r\n      ...rest\r\n    } = JSON.parse(f))\r\n    rest = fields.reduce((acc, current) => {\r\n      acc[current] = rest[current]\r\n      return acc\r\n    }, {})\r\n  } catch (err) {\r\n    throw new Error(`Could not parse ${path}.`)\r\n  }\r\n  const dir = dirname(path)\r\n  let resolved = mod || main\r\n  if (!resolved) {\r\n    const indexExists = await exists(join(dir, 'index.js'))\r\n    if (!indexExists) return undefined\r\n    resolved = main = 'index.js'\r\n  }\r\n  let entry = join(dir, resolved)\r\n  let r\r\n  try {\r\n    ({ path: r } = await resolveDep(entry))\r\n    entry = r\r\n  } catch (err) {/* does not exist */}\r\n  return { entry, version, packageName, main: !mod && main,\r\n    entryExists: !!r,\r\n    ...rest }\r\n}\r\n\r\nexport default findPackageJson\r\n\r\n/* documentary types/index.xml */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {_fpj.Config} Config The options for `fpj`.\r\n */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {Object} _fpj.Config The options for `fpj`.\r\n * @prop {!Array<string>} [fields] Any additional fields from `package.json` file to return.\r\n * @prop {boolean} [soft=false] If the entry export (main or module) does not exist, `soft` mode will not throw an error, but add the `hasEntry` property to the output set to _false_. Default `false`.\r\n */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {_fpj.Return} Return The return type of the program.\r\n */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {Object} _fpj.Return The return type of the program.\r\n * @prop {string} entry The location of the package's entry file. The preference is given to the `module` field.\r\n * @prop {string} packageJson The path to the package.json file itself.\r\n * @prop {string} packageName The name of the resolved package.\r\n * @prop {string} [version] The version of the package.\r\n * @prop {boolean} [hasMain] Whether the entry is the `main` rather than `module`.\r\n * @prop {boolean} [entryExists] In soft mode, will be set to `false` if the entry file does not exist.\r\n */\r\n","import { dirname, join } from 'path'\nimport { builtinModules } from 'module'\nimport read from '@wrote/read'\nimport resolveDependency from 'resolve-dependency'\nimport getMatches from '@depack/detect'\nimport split from '@depack/split'\nimport findPackageJson from 'fpj'\nimport mismatch from 'mismatch'\nimport erotic from 'erotic'\n\nexport const checkIfLib = modName => /^[./]/.test(modName)\n\n/**\n * Expands the dependency match to include `package.json` and entry paths.\n * @param {string} path The path to the file.\n * @param {!Array<string>} matches The matches.\n * @param {boolean} [soft] Whether to throw when a dependency's package.json is not found.\n * @param {!Array<string>} [fields] What additional fields to fetch from package.json.\n * @returns {!Promise<!Array<!_staticAnalysis.DependencyMeta>>}\n */\nconst getDependenciesMeta = async (path, matches, soft, fields, pckg = null) => {\n  const e = erotic()\n  const dir = dirname(path)\n  const proms = matches.map(async (name) => {\n    const internal = builtinModules.includes(name)\n    if (internal) return { internal: name }\n    const isLib = checkIfLib(name)\n    if (isLib) {\n      try {\n        const { path: entry } = await resolveDependency(name, path)\n        return { entry, package: pckg }\n      } catch (err) { /*\n        maybe a local package with package.json\n      */}\n    } else {\n      const { name: n, paths } = split(name)\n      if (paths) {\n        const { packageJson, packageName } = await findPackageJson(dir, n)\n        const d = dirname(packageJson)\n        const { path: entry } = await resolveDependency(join(d, paths))\n        return { entry, package: packageName }\n      }\n    }\n    try {\n      const {\n        entry, packageJson, version, packageName, hasMain, ...rest\n      } = await findPackageJson(dir, name, { fields })\n      if (packageName == pckg) {\n        console.warn('[static-analysis] Skipping package %s that imports itself in %s', packageName, path)\n        return null\n      }\n      return {\n        entry, packageJson, version, name: packageName,\n        ...(hasMain ? { hasMain } : {}),\n        ...rest }\n    } catch (err) {\n      if (soft) return null\n      let [v] = process.version.split('.')\n      v = parseInt(v.replace('v', ''), 10)\n      if (v >= 12) throw err\n      throw e(err)\n    }\n  })\n  return (await Promise.all(proms)).filter(Boolean)\n}\n\n/**\n * Detects the imports.\n * @param {string} path\n * @param {Object} cache\n * @returns {!Promise<!Array<!_staticAnalysis.Detection>>}\n */\nexport const detect = async (path, cache = {}, {\n  nodeModules = true, shallow = false, soft = false, fields = [],\n  node_modules_cache = {},\n  mergeSameNodeModules = true,\n  package: pckg } = {}) => {\n  if (path in cache) return []\n  cache[path] = 1\n  const source = await read(path)\n  const matches = getMatches(source)\n  const requireMatches = getRequireMatches(source)\n  const fm = nodeModules ? matches : matches.filter(checkIfLib)\n  const fr = nodeModules ? requireMatches : requireMatches.filter(checkIfLib)\n\n  let deps\n  try {\n    const dm = await getDependenciesMeta(path, fm, soft, fields, pckg)\n    const rm = await getDependenciesMeta(path, fr, soft, fields, pckg)\n    rm.forEach((val) => {\n      val.required = true\n    })\n    deps = [...dm, ...rm]\n  } catch (err) {\n    err.message = `${path}\\n [!] ${err.message}`\n    throw err\n  }\n  const Deps = mergeSameNodeModules ? deps.map(o => {\n    const { name, version, required } = o\n    if (name && version) {\n      // for non-flattened node_modules structure, e.g., when linking\n      // to prevent multiple same packages like\n      // depA, node_modules/depB/node_modules/depA\n      const n = `${name}:${version}${required ? '-required' : ''}`\n      const existing = node_modules_cache[n]\n      if (existing) return existing\n\n      node_modules_cache[n] = o\n    }\n    return o\n  }) : deps\n  const d = Deps.map(o => ({ ...o, from: path }))\n  const entries = Deps\n    .filter(({ entry }) => {\n      return entry && !(entry in cache)\n    })\n  const discovered = await entries\n    .reduce(async (acc, {\n      entry, hasMain, packageJson, name, package: p }) => {\n      if (packageJson && shallow) return acc\n      const accRes = await acc\n      const res = await detect(entry, cache, {\n        nodeModules, shallow, soft, fields, package: name || p,\n        node_modules_cache, mergeSameNodeModules,\n      })\n      const r = res\n        .map(o => ({\n          ...o,\n          from: o.from ? o.from : entry,\n          ...(!o.packageJson && hasMain ? { hasMain } : {}),\n        }))\n      return [...accRes, ...r]\n    }, d)\n  return discovered\n}\n\nexport const getRequireMatches = (source) => {\n  const m = mismatch(/(?:^|[^\\w\\d_])require\\(\\s*(['\"])(.+?)\\1\\s*\\)/gm, source, ['q', 'from'])\n  const res = m.map(a => a['from'])\n  return res\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Detection} _staticAnalysis.Detection\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').DependencyMeta} _staticAnalysis.DependencyMeta\n */","import resolveDependency from 'resolve-dependency'\nimport erotic from 'erotic'\nimport { detect } from './lib'\n\n/**\n * Detects all dependencies in a file and their dependencies recursively.\n * @param {!Array<string>|string} path The path to the file in which to detect dependencies.\n * @param {!_staticAnalysis.Config} [config] The configuration options for `staticAnalysis`.\n * @return {!Promise<!Array<_staticAnalysis.Detection>>}\n */\nconst staticAnalysis = async (path, config = {}) => {\n  const e = erotic()\n  let paths = Array.isArray(path) ? path : [path]\n  paths = await Promise.all(paths.map(async p => {\n    const { path: pp } = await resolveDependency(p)\n    return pp\n  }))\n\n  const {\n    nodeModules = true,\n    shallow = false,\n    soft = false,\n    fields = [],\n    mergeSameNodeModules = true,\n  } = config\n  let detected\n  try {\n    const cache = {}\n\n    detected = await paths.reduce(async (acc, p) => {\n      acc = await acc\n      const res = await detect(p, cache, {\n        nodeModules, shallow, soft, fields, mergeSameNodeModules })\n      acc.push(...res)\n      return acc\n    }, [])\n  } catch (err) {\n    let [v] = process.version.split('.')\n    v = parseInt(v.replace('v', ''), 10)\n    if (v >= 12) throw err\n    throw e(err)\n  }\n  const filtered = detected.filter(({ internal, entry }, i) => {\n    if (internal) {\n      const fi = detected.findIndex(({ internal: ii }) => {\n        return ii == internal\n      })\n      return fi == i\n    }\n    const ei = detected.findIndex(({ entry: ee }) => {\n      return entry == ee\n    })\n    return ei == i\n  })\n  const f = filtered.map((ff) => {\n    const { entry, internal } = ff\n    const froms = detected\n      .filter(({ internal: i, entry: ee }) => {\n        if (internal) return internal == i\n        if (entry) return entry == ee\n      })\n      .map(({ from }) => from)\n      .filter((el, i, a) => a.indexOf(el) == i)\n    const newF =  { ...ff, from: froms }\n    return newF\n  })\n    .map(({ package: pckg, ...props }) => {\n      if (pckg) return { package: pckg, ...props }\n      return props\n    })\n  return f\n}\n\n/**\n * Sorts the detected dependencies into commonJS modules, packageJsons and internals.\n * @param {!Array<!_staticAnalysis.Detection>} detected The detected matches\n * @return {_staticAnalysis.SortReturn}\n */\nexport const sort = (detected) => {\n  const packageJsons = []\n  const commonJsPackageJsons = []\n  const commonJs = []\n  const js = []\n  const internals = []\n  const deps = []\n  detected\n    .forEach(({ packageJson, hasMain, name, entry, internal }) => {\n      if (internal) return internals.push(internal)\n\n      if (packageJson && hasMain)\n        commonJsPackageJsons.push(packageJson)\n      else if (packageJson) packageJsons.push(packageJson)\n      if (entry && hasMain) commonJs.push(entry)\n      else if (entry) js.push(entry)\n      if (name) deps.push(name)\n    })\n  return { commonJsPackageJsons,\n    packageJsons, commonJs, js, internals, deps }\n}\n\nexport default staticAnalysis\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').Config} _staticAnalysis.Config\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').SortReturn} _staticAnalysis.SortReturn\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').Detection} _staticAnalysis.Detection\n */","/**\n * Pad Strings.\n * @param {number} width The width to which to pad.\n * @param {string} string The string to pad.\n */\nconst pad = (width, string) => {\n  const d = Math.max(width - string.length, 0)\n  const p = ' '.repeat(d)\n  const s = `${string}${p}`\n  return s\n}\n\n/**\n * Pads the string so that each line is of equal width.\n * @param {string} string The string to pad.\n * @param {!_paddys.Config} [options] Options for the program.\n * @param {number} [options.width] The width to which to pad lines.\n * @example\n```\nconst res = paddys(`test\nt`)\n// test\n// t___\n```\n */\nconst paddys = (string, options = {}) => {\n  const {\n    width,\n  } = options\n  const s = string.split('\\n')\n  const w = width || s.reduce((acc, { length: l }) => l > acc ? l : acc, 0)\n  return s.map(pad.bind(null, w)).join('\\n')\n}\n\nexport default paddys\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_paddys.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _paddys.Config Options for the program.\n * @prop {number} [width] The width to which to pad lines.\n */\n","import paddys from 'paddys'\n/**\n * Add a frame around strings.\n * @param {string} string The string to frame.\n * @param {!_frameOfMind.Config} [options] Options for the program.\n * @param {number} [options.padding=1] The left and right padding. Default `1`.\n */\nexport default function frameOfMind(string, options = {}) {\n  const { padding = 1 } = options\n  const l = string.split('\\n')\n  const w = l.reduce((acc, { length }) => length > acc ? length : acc, 0)\n  const ww = w + padding * 2\n  const bt = `\u250c${'\u2500'.repeat(ww)}\u2510`\n  const bb = `\u2514${'\u2500'.repeat(ww)}\u2518`\n  const pp = ' '.repeat(padding)\n  const p = paddys(string)\n    .split('\\n')\n    .map(line => `\u2502${pp}${line}${pp}\u2502`)\n    .join('\\n')\n  return `${bt}\\n${p}\\n${bb}`\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_frameOfMind.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _frameOfMind.Config Options for the program.\n * @prop {number} [padding=1] The left and right padding. Default `1`.\n */\n","import { c, b } from 'erte'\nimport { join, dirname, basename, relative } from 'path'\nimport { write, read, exists } from '@wrote/wrote'\nimport { builtinModules } from 'module'\n\nexport const replaceWithColor = (str, name, color, background = false) => {\n  const re = new RegExp(`--${name} (\\\\\\\\\\n)?(\\\\S+)`, 'g')\n  return str.replace(re, (m, bef, f) => {\n    const fn = background ? b : c\n    return `--${name} ${bef || ''}${fn(f, color)}`\n  })\n}\n\n/**\n * Returns the pretty-printed command for the bundler.\n * @param {!Array<string>} args The array with arguments.\n * @param {!Array<string>} js The list of js files and chunks.\n */\nexport const getCommand = (args, js) => {\n  let s = getShellCommand(args)\n\n  s = replaceWithColor(s, 'compilation_level', 'green', true)\n  s = replaceWithColor(s, 'js_output_file', 'red')\n\n  const sep = '\\n     '\n  const jss = js.filter(a => a != '--js').map((file, i, a) => {\n    if (file == '--chunk') {\n      return `${file} `\n      // return `${c(file, 'magenta')} `\n    } else if (a[i-1] == '--chunk') {\n      return `${c(file, 'magenta')}${sep}`\n    }\n    let j = `${c(file, 'green')}`\n    if (a.length - 1 == i) return j\n    if (a[i + 1] == '--chunk') return `${j}\\n`\n    //${(a.length - 1 != i && a[i + 1] != '--chunk') ? sep : ''}`\n    return `${j}${sep}`\n  }).join('')\n  // .join('\\n     ')\n  return `${s}\\n--js ${jss}`.trim()\n}\n\nexport const addData = async (path, { sourceMap }) => {\n  const r = await read(path)\n  const rr = [r]\n  if (sourceMap) {\n    const name = basename(path)\n    rr.push('//' + `# sourceMappingURL=${name}.map`)\n  }\n  await write(path, rr.join('\\n'))\n}\n\nexport const removeStrict = async (path, wrapper = '', noStrict = false) => {\n  // if we compiled a library, GCC would already not have use strict\n  // as compared to the compile mode where we added #!/usr/bin/env node\n  // on top which resulted in an extra 'use strict' after the wrapper\n  if (wrapper.startsWith('\\'use strict\\'') && !noStrict) return\n  const r = await read(path)\n  const prepared = prepareOutput(r, wrapper, noStrict)\n  await write(path, prepared)\n}\n\n// fixes 'use strict' to be on top\nexport const prepareOutput = (output, wrapper = '', noStrict = false) => {\n  const wp = wrapper.replace(/%output%$/, '')\n  const actualOutput = output.replace(wp, '')\n  const hasUseStrict = actualOutput.startsWith('\\'use strict\\';')\n  let ao = actualOutput\n  if (wrapper || noStrict)\n    ao = actualOutput.replace(/'use strict';/, ' '.repeat(13))\n  const aw = noStrict || !hasUseStrict ? wp.replace(/'use strict';/, ' '.repeat(13)) : wp\n  return `${aw}${ao}`\n}\n\nexport const updateSourceMaps = async (path, tempDir) => {\n  const map = `${path}.map`\n  const r = await read(map)\n  const j = JSON.parse(r)\n  const { 'sources': sources } = j\n  const newSources = sources.map(s => {\n    if (s.startsWith(' ')) return s\n    return `/${relative(tempDir, s)}`\n  })\n  j['sources'] = newSources\n  const jj = JSON.stringify(j, null, 2)\n  await write(map, jj)\n}\n\n/**\n * Returns whether the dependency is a library from the package.\n * @param {string} modName\n * @example\n * checkIfLib('./lib') // true\n * checkIfLib('preact') // false\n */\nexport const checkIfLib = modName => /^[./]/.test(modName)\n\n/**\n * Gets the wrapper to for the output to enable requiring Node.js modules.\n * @param {!Array<string>} internals The list of internal modules used in the program.\n * @example\n * const fs = require('fs');\n * const _module = require('module');\n */\nexport const getWrapper = (internals) => {\n  if (!internals.length) return\n  const wrapper = internals\n    .map(i => {\n      let m = i\n      if (['module', 'process', 'console', 'crypto'].includes(i)) m = `_${i}`\n      return `const ${m} = r` + `equire('${i}');` // prevent\n    })\n    .join('\\n') + '%output%'\n  return `#!/usr/bin/env node\n'use strict';\n${wrapper}`\n}\n\n/**\n * Checks whether static analysis returned .json files.\n * @param {!Array<!_staticAnalysis.Detection>} detected\n */\nexport const hasJsonFiles = detected => detected.filter(({ entry }) => {\n  if (entry)\n    return entry.endsWith('.json')\n})\n\nconst { DEPACK_MAX_COLUMNS = 87 } = process.env\n\nexport const getShellCommand = (args, program = 'java') => {\n  const maxLength = process.stderr.columns - 3 || DEPACK_MAX_COLUMNS\n  let lastLineLength = program.length\n  const s = args.reduce((acc, current) => {\n    if (lastLineLength + current.length > maxLength) {\n      acc = acc + ' \\\\\\n' + current\n      lastLineLength = current.length\n    } else {\n      acc = acc + ' ' + current\n      lastLineLength += current.length + 1\n    }\n    return acc\n  }, program)\n  return s\n}\n\n/**\n * @param {!Array<string>} files Paths to externs.\n * @param {string} [name] The package name.\n */\nexport const checkExternsExist = async (files, name) => {\n  await Promise.all(files.map(async pp => {\n    const exist = await exists(pp)\n    if (!exist) {\n      const n = name ? ` specified in the \"externs\" field of package ${name}` : ''\n      throw new Error(`Externs file ${pp}${n} doesn't exist.`)\n    }\n  }))\n}\n\n/**\n * Runs through detected packages and returns the list of externs specified in the `externs` field.\n * @param {!Array<!_staticAnalysis.Detection>} detected\n */\nexport const detectExterns = async (detected) => {\n  /** @type {!Array<string>} */\n  const nodeJS = []\n  /** @type {!Array<string>} */\n  const files = await detected.reduce(async (acc, { name, packageJson, 'externs': externs = [] }) => {\n    acc = await acc\n    if (!packageJson) return acc\n    const dir = dirname(packageJson)\n    externs = Array.isArray(externs) ? externs : [externs]\n    externs = externs.filter((e) => {\n      if (builtinModules.includes(e)) {\n        nodeJS.push(e)\n        return false\n      }\n      return true\n    })\n    const actual = externs.map((e) => join(dir, e))\n    await checkExternsExist(actual, name)\n    return [...acc, ...actual]\n  }, [])\n\n  return { files, nodeJS }\n}\n\nexport const createExternsArgs = (externs) => {\n  const args = externs.reduce((acc, e) => {\n    return [...acc, '--externs', e]\n  }, [])\n  return args\n}\n\nexport const unique = (e, i, a) => a.indexOf(e) == i\n\nexport const updateTempDirArgs = (args, tempDir) => {\n  return args.map((j) => {\n    return j.startsWith(tempDir) ? relative(tempDir, j) : j\n  })\n}\n\nexport const getBundleArgs = (compilerArgs, externs, output, noSourceMap, deps, processCommonJs) => {\n  const args = [\n    ...compilerArgs,\n    ...externs,\n    ...(output && !noSourceMap ? ['--source_map_include_content'] : []),\n    ...(deps.length > 1 ? ['--module_resolution', 'NODE'] : []),\n    ...(processCommonJs ? ['--process_common_js_modules'] : []),\n  ]\n  return args\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('static-analysis').Detection} _staticAnalysis.Detection\n */","import { c } from 'erte'\nimport { join, dirname, relative } from 'path'\nimport { ensurePath, write, read, exists } from '@wrote/wrote'\n// import getCorePath from '@depack/nodejs'\nimport resolveDependency from 'resolve-dependency'\n\n/**\n * Create an error with color.\n * @param {number} exitCode\n * @param {string} se The output of the compiler.\n */\nexport const makeError = (exitCode, se) => {\n  const r = se.split('\\n\\n')\n  const s = r.map((t) => {\n    const warn = /^.+?:\\d+:(?:\\s*Originally at:\\s*.+?)? WARNING -/.test(t)\n    if (warn) return c(t, 'grey')\n    return c(t, 'red')\n  }).join('\\n\\n')\n\n  const er = `Exit code ${exitCode}\\n${s}`\n  return er\n}\n\n\nconst getCoreVersion = () => {\n  let [VER] = process.version.split('.', 1)\n  const V = VER.replace(/[^\\d]/g, '')\n  if (V > 8 || V < 8) {\n    console.log('Your Node.JS version is %s but only externs for v8 are available at the moment. ' +\n      'This can result in compiler warnings.', VER)\n    VER = 'v8'\n  }\n  return VER\n}\n\n/**\n * Creates mocks in the `node_module` folder to serve as externs. It is not possible to serve proxies not from `node_modules` path because Closure does not understand it.\n * @param {!Object} opts\n * @param {!Array<string>} opts.internals The names of the core modules to prepare.\n * @param {string} [opts.nodeModulesPath] The path to the node_modules folder in which to put the core mocks. Default `node_modules`.\n * @param {boolean} [opts.force] Whether to force override. Default `true`.\n * @todo Add an option to dynamically evaluate the content of the mock.\n */\nexport const prepareCoreModules = async ({\n  internals, nodeModulesPath = 'node_modules', force = true,\n}) => {\n  const VER = getCoreVersion()\n  const getCorePath = require(/*ok depack*/'@depack/nodejs')\n  const corePath = getCorePath(VER)\n  const r = await Promise.all(internals.map(async (name) => {\n    const path = join(nodeModulesPath, name)\n    const packageJson = join(path, 'package.json')\n    const index = join(path, 'index.js')\n    const ret = { packageJson, index }\n\n    const e = await exists(packageJson)\n    if (e && !force) {\n      const depackExist = await testDepack(packageJson)\n      if (depackExist && depackExist == VER) return ret\n      else\n        throw new Error(`Could not prepare core module ${name}: ${path} exists.`)\n    }\n    await ensurePath(packageJson)\n    await write(packageJson, JSON.stringify({\n      'name': name, 'module': 'index.js', 'depack': VER,\n    }))\n    const core = await read(join(corePath, `${name}.js`))\n    await write(index, core)\n    return ret\n  }))\n  return r.reduce((acc, { packageJson, index }) => {\n    return [...acc, packageJson, index]\n  }, [])\n}\n\n/**\n * Check whether the package has the depack property meaning it is a mock and was created by `prepareCoreModules` earlier. Returns the version of Node when the core package was simulated in `node_modules`.\n */\nconst testDepack = async (packageJson) => {\n  try {\n    const testPackage = await read(packageJson)\n    const { 'depack': depack } = JSON.parse(testPackage)\n    return depack\n  } catch (err) { /* */ }\n}\n\n/**\n * Update dependencies' package.json files to point to a file and not a directory. * https://github.com/google/closure-compiler/issues/3149\n * @param {!Array<string>} commonJS The paths to CommonJS package.json files.\n * @param {!Array<string>} modules The paths to package.json files.\n */\nexport const fixDependencies = async (commonJS, modules) => {\n  const all = [...commonJS, ...modules]\n  await Promise.all(all.map(async (dep) => {\n    const dir = dirname(dep)\n    const f = await read(dep)\n    const p = JSON.parse(f)\n    const { 'main': main, 'module': mod } = p\n    const isModule = !!mod\n    const field = isModule ? 'module' : 'main'\n    let M = mod || main\n    if (!M) {\n      const j = join(dirname(dep), 'index.js')\n      const e = await exists(j)\n      if (!e) throw new Error(`Package ${dep} does not specify either main or module fields, and does not contain the index.js file.`)\n      p['main'] = 'index.js'\n      console.warn('Updating %s to have the main field.', dep)\n      await write(dep, JSON.stringify(p, null, 2))\n    }\n    let isDir, path\n    try {\n      ({ isDir, path } = await resolveDependency(M, dep))\n    } catch (err) {\n      throw new Error(`The ${field} for dependency ${dep} does not exist.`)\n    }\n    if (isDir) {\n      const newM = join(M, 'index.js')\n      p[field] = newM\n      console.warn('Updating %s to point to a file.', dep)\n      await write(dep, JSON.stringify(p, null, 2))\n    } else if (join(dir, p[field]) != path) {\n      const relPath = relative(dir, path)\n      p[field] = relPath\n      console.warn('Updating %s to point to the file with extension.', dep)\n      await write(dep, JSON.stringify(p, null, 2))\n    }\n  }))\n}","/**\n * @type {_indicatrix.indicatrix}\n */\nasync function $indicatrix(text, promise, options = {}) {\n  const { interval = 250, writable = process.stdout } = options\n  const p = typeof promise == 'function' ? promise() : promise\n  const write = writable.write.bind(writable)\n\n  const { INDICATRIX_PLACEHOLDER: placeholder } = process.env\n  if (placeholder && placeholder != '0') {\n    write(`${text}<INDICATRIX_PLACEHOLDER>`)\n    return await p\n  }\n\n  let i = 1\n  const getText = () => `${text}${'.'.repeat(i)}`\n  const clear = () => write(`\\r${' '.repeat(text.length + 3)}\\r`)\n  let s = getText()\n  write(s)\n  const int = setInterval(() => {\n    i = (i + 1) % 4\n    s = getText()\n    clear()\n    write(s)\n  }, interval)\n  try {\n    const res = await p\n    return res\n  } finally {\n    clearInterval(int)\n    clear()\n  }\n}\n\nexport default $indicatrix\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..')} _indicatrix.indicatrix\n */","import loading from 'indicatrix'\nimport spawn from 'spawncommand'\nimport { c } from 'erte'\nimport { createWriteStream } from 'fs'\nimport { makeError } from './closure'\nimport { addData } from './'\n\n/**\n * Spawns Java and executes the compilation.\n * @param {!Array<string>} args The arguments to Java.\n * @param {!_depack.RunConfig} [opts] General options for running of the compiler.\n * @param {string} [opts.output] The path where the output will be saved. Prints to `stdout` if not passed.\n * @param {string} [opts.debug] The name of the file where to save sources after each pass. Useful when there's a bug in GCC.\n * @param {string} [opts.compilerVersion] Used in the display message.\n * @param {boolean} [opts.noSourceMap=false] Disables source maps. Default `false`.\n * @return {!Promise<string>} Stdout of JavaProcess\n */\nconst run = async (args, opts = {}) => {\n  const {\n    debug, compilerVersion, output, noSourceMap, outputFiles,\n  } = opts\n  let { promise, stderr: compilerStderr } = spawn('java', args)\n  if (debug) compilerStderr.pipe(createWriteStream(debug))\n\n  const { stdout, stderr, code } = await loading(`Running Google Closure Compiler${\n    compilerVersion ? ' ' + c(compilerVersion, 'grey') : ''\n  }`, promise, {\n    writable: process.stderr,\n  })\n  // if(process.stderr.isTTY) process.stderr.write(' '.repeat(process.stderr.columns))\n\n  if (code) throw new Error(makeError(code, stderr))\n\n  if (!noSourceMap) {\n    if (outputFiles) {\n      await Promise.all(outputFiles.map(async (outputFile) => {\n        await addData(outputFile, { sourceMap: true })\n      }))\n    }\n    else if (output) await addData(output, { sourceMap: !noSourceMap })\n  }\n\n  if (stderr && !debug) console.warn(c(stderr, 'grey'))\n  else if (debug) console.log('Sources after each pass saved to %s', debug)\n  return stdout\n}\n\nexport default run\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_depack.RunConfig} RunConfig General options for running of the compiler.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _depack.RunConfig General options for running of the compiler.\n * @prop {string} [output] The path where the output will be saved. Prints to `stdout` if not passed.\n * @prop {string} [debug] The name of the file where to save sources after each pass. Useful when there's a bug in GCC.\n * @prop {string} [compilerVersion] Used in the display message.\n * @prop {boolean} [noSourceMap=false] Disables source maps. Default `false`.\n */\n","export default child_process\nexport const {\n  ChildProcess,\n  exec,\n  execFile,\n  execFileSync,\n  execSync,\n  fork,\n  spawn,\n  spawnSync,\n} = child_process","import { spawn, fork as forkCp } from 'child_process'\nimport { collect } from 'catchment'\n\n/**\n * @param {!child_process.ChildProcess} proc\n * @returns {!Promise<_spawncommand.PromiseResult>}\n */\nconst getPromise = async (proc) => {\n  const [code, stdout, stderr] = await Promise.all([\n    new Promise((resolve, reject) => {\n      proc.on('error', reject)\n        .on('exit', (code) => {\n          resolve(code)\n        })\n    }),\n    proc.stdout ? collect(proc.stdout) : undefined,\n    proc.stderr ? collect(proc.stderr) : undefined,\n  ])\n  return {\n    code,\n    stdout,\n    stderr,\n  }\n}\n\n/**\n * Spawns a new process using the `command` and returns an instance of a ChildProcess, extended to have a `promise` property which is resolved when the process exits. The resolved value is an object with `stdout`, `stderr` and `code` properties.\n * @param {string} command The command to run.\n * @param {!Array<string>} [args] List of string arguments.\n * @param {!child_process.SpawnOptions} [options] Options used to spawn.\n */\nexport default function spawnCommand(command, args, options) {\n  if (!command) throw new Error('Please specify a command to spawn.')\n  const proc = /** @type {!_spawncommand.ChildProcessWithPromise} */ (spawn(command, args, options))\n\n  const promise = getPromise(proc)\n  proc.promise = promise\n  /** @suppress {checkTypes} */\n  proc.spawnCommand = proc['spawnargs'].join(' ')\n  return proc\n}\n\n/**\n * Forks a process and assign a `promise` property to it, resolved with `stderr`, `stdout` and `code` properties on exit.\n * @param {string} mod The module to run in the child.\n * @param {!Array<string>} [args] List of string arguments.\n * @param {!child_process.ForkOptions} [options] Options to fork the process with.\n */\nexport function fork(mod, args, options) {\n  if (!mod) throw new Error('Please specify a module to fork')\n  const proc = /** @type {!_spawncommand.ChildProcessWithPromise} */ (forkCp(mod, args, options))\n\n  const promise = getPromise(proc)\n  proc.promise = promise\n  /** @suppress {checkTypes} */\n  proc.spawnCommand = proc['spawnargs'].join(' ')\n  return proc\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_spawncommand.PromiseResult} PromiseResult\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _spawncommand.PromiseResult\n * @prop {string} stdout The accumulated result of the `stdout` stream.\n * @prop {string} stderr The accumulated result of the `stderr` stream.\n * @prop {number} code The code with which the process exited.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('child_process').SpawnOptions} child_process.SpawnOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('child_process').ForkOptions} child_process.ForkOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('child_process').ChildProcess} child_process.ChildProcess\n */\n\n/* documentary types/cp.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_spawncommand.ChildProcessWithPromise} ChildProcessWithPromise A child process with an extra `promise` property.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {child_process.ChildProcess & _spawncommand.$ChildProcessWithPromise} _spawncommand.ChildProcessWithPromise A child process with an extra `promise` property.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _spawncommand.$ChildProcessWithPromise A child process with an extra `promise` property.\n * @prop {!Promise<!_spawncommand.PromiseResult>} promise A promise resolved when the process exits.\n * @prop {string} spawnCommand The spawn arguments joined by whitespace.\n */\n","/* eslint-disable no-console */\nimport { c } from 'erte'\nimport { join } from 'path'\nimport makePromise from 'makepromise'\nimport { chmod } from 'fs'\nimport { builtinModules } from 'module'\nimport detect, { sort } from 'static-analysis'\nimport frame from 'frame-of-mind'\nimport { removeStrict, getWrapper, hasJsonFiles, prepareOutput, getShellCommand, replaceWithColor, detectExterns, createExternsArgs, checkExternsExist } from './'\nimport { prepareCoreModules, fixDependencies } from './closure'\nimport run from './run'\n\n/**\n * Compile a Node.JS file into a single executable.\n * @param {!_depack.CompileConfig} options Options for the Node.JS package compiler.\n * @param {!_depack.RunConfig} [runOptions] General options for running of the compiler.\n * @param {!Array<string>} [compilerArgs] The compiler args got with `getOptions` and/or manually extended.\n */\nconst Compile = async (options, runOptions = {}, compilerArgs = []) => {\n  const { src, noStrict, verbose, silent } = options\n  const { output } = runOptions\n  if (!src) throw new Error('Source is not given.')\n  // allow to pass internals in --externs arg, e.g.,\n  // --externs stream\n  // this is when externs are needed but not imported in code\n  /** @type {!Array<string>} */\n  const foundAdditional = compilerArgs.reduce((acc, val, i, a) => {\n    if (val != '--externs') return acc\n    const next = a[i + 1]\n    if (!next) return acc\n    if (builtinModules.includes(next)) {\n      compilerArgs[i] = ''\n      compilerArgs[i + 1] = ''\n      acc.push(next)\n    }\n    return acc\n  }, [])\n  const realCompilerArgs =\n    foundAdditional.length ? compilerArgs.filter(a => a) : compilerArgs\n\n  const args = [\n    ...realCompilerArgs,\n    '--package_json_entry_names', 'module,main',\n    '--entry_point', src,\n  ]\n  const detected = await detect(src, {\n    fields: ['externs'],\n  })\n  const { files: detectedExterns, nodeJS } = await detectExterns(detected)\n  detectedExterns.length && console.error('%s %s', c('Modules\\' externs:', 'blue'), detectedExterns.join(' '))\n  const detectedExternsArgs = createExternsArgs(detectedExterns)\n  warnOfCommonJs(detected)\n\n  const sorted = sort(detected)\n  const {\n    commonJs, commonJsPackageJsons, internals, js, packageJsons,\n  } = sorted\n  const internalDeps = await prepareCoreModules({ internals })\n  const externs = await getNodeExterns(internals, [\n    ...foundAdditional,\n    ...nodeJS,\n  ])\n  await fixDependencies(commonJsPackageJsons, packageJsons)\n\n  const files = [src,\n    ...commonJsPackageJsons,\n    ...packageJsons,\n    ...js,\n    ...commonJs,\n    ...internalDeps,\n  ].sort((a, b) => {\n    if (a.startsWith('node_modules')) return -1\n    if (b.startsWith('node_modules')) return 1\n    return 0\n  })\n  const wrapper = getWrapper(internals)\n  const jsonFiles = hasJsonFiles(detected)\n\n  const Args = [\n    ...args,\n    ...externs,\n    ...detectedExternsArgs,\n    ...(files.length > 1 ? ['--module_resolution', 'NODE'] : []),\n    ...(commonJs.length ? ['--process_common_js_modules'] : []),\n    ...(wrapper ? ['--output_wrapper', wrapper] : []),\n    '--js', ...files,\n  ]\n  if (jsonFiles.length && !commonJs.length) {\n    const hasRequired = jsonFiles.filter(({ required }) => {\n      return required\n    }, false)\n    if (hasRequired.length) {\n      console.error('You are requiring JSON files. Make sure their relative paths will stay the same to the build.')\n      console.log(hasRequired.map(({ entry, from }) => {\n        return `${c(entry, 'blue')} from ${from.join(' ')}`\n      })\n        .join('\\n'))\n    }\n  }\n  verbose ? console.error(getShellCommand(Args)) : printCommand(args, [\n    ...externs, ...detectedExternsArgs,\n  ], sorted)\n\n  const stdout = await run(Args, runOptions)\n  if (!output) {\n    const o = prepareOutput(stdout, wrapper, noStrict).trim()\n    if (!silent) console.log(o)\n    return o\n  }\n\n  await removeStrict(output, wrapper, noStrict)\n  await makePromise(chmod, [output, '755'])\n  return stdout\n}\n\nconst printCommand = (args, externs, sorted) => {\n  let s = getShellCommand([...args, ...externs])\n  s = replaceWithColor(s, 'js_output_file', 'red')\n  s = replaceWithColor(s, 'externs', 'grey')\n  s = replaceWithColor(s, 'compilation_level', 'green', true)\n  console.error(s)\n  const {\n    commonJs, internals, js, deps,\n  } = sorted\n  const fjs = js.filter(filterNodeModule)\n  const cjs = commonJs.filter(filterNodeModule)\n  if (deps.length) console.error('%s: %s',\n    c('Dependencies', 'yellow'), deps.filter((e, i, a) => {\n      return a.indexOf(e) == i\n    }).join(' '))\n  if (fjs.length) console.error('%s: %s',\n    c('Modules', 'yellow'), fjs.join(' '))\n  if (cjs.length) console.error('%s: %s',\n    c('CommonJS', 'yellow'), cjs.join(' '))\n  if (internals.length) console.error('%s: %s',\n    c('Built-ins', 'yellow'), internals.join(', '))\n}\n\n/**\n * @param {!Array<!_staticAnalysis.Detection>} analysis\n */\nconst warnOfCommonJs = (analysis) => {\n  const res = analysis.map(({ hasMain, name, from }) => {\n    if (!(hasMain && name)) return\n    const fromSrc = from.filter((s) => {\n      const detection = analysis.find(({ entry: e }) => {\n        return e === s\n      })\n      if (!detection) return\n      if (detection.hasMain) return\n      return true\n    })\n    if (!fromSrc.length) return\n    return { name, fromSrc }\n  }).filter(Boolean)\n  if (res.length) {\n    console.error(c(getCompatWarning(), 'red'))\n    console.error('The following commonJS packages referenced in ES6 modules don\\'t support named exports:')\n    res.forEach(({ name, fromSrc }) => {\n      console.error(' %s from %s', c(name, 'red'), c(fromSrc.join(' '), 'grey'))\n    })\n  }\n\n  return res\n}\n\nconst getCompatWarning = () => {\n  let s = `CommonJS don't have named exports, make sure to use them like\n` + `import myModule from 'my-module' /* CommonJS Compat */\nmyModule.default.method('hello world') // yes Node.JS, wat r u doing\nmyModule.default('must explicitly call default')`\n  const mx = s.split('\\n').reduce((acc, { length }) => {\n    if (length > acc) return length\n    return acc\n  }, 0)\n  if (process.stderr.isTTY && mx + 4 < process.stderr.columns) {\n    s = frame(s)\n  }\n  return s\n}\n\nconst filterNodeModule = (entry) => {\n  return !entry.startsWith('node_modules')\n}\n\nconst unique = (e, i, a) => a.indexOf(e) == i\n\n/**\n * Returns compiler arguments to include Node.JS externs.\n * @param {!Array<string>} internals The list of builtin Node.JS modules used.\n * @param {!Array<string>} additional Any extra Node.JS modules to be included\n */\nexport const getNodeExterns = async (internals, additional = []) => {\n  /** @type {function(): string} */\n  const getExternsDir = require(/*ok depack*/'@externs/nodejs')\n  const externsDeps = getExternsDir['dependencies']\n\n  const externsDir = getExternsDir()\n  const allInternals = [...internals, ...additional]\n    .filter(unique)\n    .reduce((acc, i) => {\n      const deps = externsDeps[i] || []\n      return [...acc, i, ...deps]\n    }, [])\n    .filter(unique)\n  const internalExterns = [...allInternals, 'global', 'global/buffer', 'nodejs']\n    .map(i => {\n      if (['module', 'process', 'console', 'crypto'].includes(i)) i = `_${i}`\n      return join(externsDir, `${i}.js`)\n    })\n  await checkExternsExist(internalExterns)\n  const args = createExternsArgs(internalExterns)\n  return args\n}\n\nexport default Compile\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('static-analysis').Detection} _staticAnalysis.Detection\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../compile').CompileConfig} _depack.CompileConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../compile').RunConfig} _depack.RunConfig\n */","export default vm\nexport const {\n  Script,\n  createContext,\n  isContext,\n  runInContext,\n  runInDebugContext,\n  runInNewContext,\n  runInThisContext,\n} = vm","/**\n * The function to extract the position of the symbol from the error due to the fact that the script body couldn't be evaluated by the _vm.Script_ constructor.\n * @param {string} stack The error stack.\n * @param {string} input The input which was passed to the evaluation.\n */\nexport const findPosition = (stack, input) => {\n  const [h, , l2] = stack.split('\\n')\n  const l = parseInt(h.replace(/.+?(\\d+)$/, (m, d) => d)) - 1\n  const c = l2.indexOf('^')\n  const { length } = input.split('\\n').slice(0, l).join('\\n')\n  const lb = length + c + (l ? 1 : 0)\n  return lb\n}","import { Script } from 'vm'\nimport { findPosition } from './lib'\n\n/**\n * Returns the index of the opening `<` symbol in a JSX tag by calling a Script constructor and extracting information from the error message.\n * @param {string} input The string to evaluate in the V8 VM as JavaScript with JSX. If there is no `<`, the `null` is returned. Any another error in code will be thrown as is.\n */\nconst detectJSX = (input) => {\n  try {\n    new Script(input)\n  } catch (err) {\n    const { message, stack } = err\n    if (!/Unexpected token '?</.test(message)) throw err\n    const bl = findPosition(stack, input)\n    return bl\n  }\n  return null\n}\n\nexport default detectJSX\n\n/* documentary types/index.xml */\n/**\n * @typedef {Object} Config Options for the program.\n * @prop {boolean} [shouldRun=true] A boolean option. Default `true`.\n * @prop {string} text A text to return.\n */\n","export function checkRule(reObject) {\n  if (typeof reObject != 'object') {\n    return false\n  }\n  const { re, replacement } = reObject\n  const hasRe = re instanceof RegExp\n  const type = ['string', 'function'].indexOf(typeof replacement) != -1\n  return hasRe && type\n}\n\nexport const hideStack = (commonError, thrownError) => {\n  if (!(thrownError instanceof Error)) throw thrownError\n  const [, , commonLine] = commonError.stack.split('\\n', 3)\n  const i = thrownError.stack.indexOf(commonLine)\n  if (i == -1) throw thrownError\n  const stack = thrownError.stack.substr(0, i - 1)\n  const li = stack.lastIndexOf('\\n')\n  thrownError.stack = stack.substr(0, li)\n  throw thrownError\n}","import { checkRule, hideStack } from './lib'\n\n/**\n  * _SyncReplaceable_ function receives the whole string and returns the result of transform rules which are either sync function replacers or string replacements (see https://github.com/artdecocode/restream#rule-type for more info). This is not a class and just a function.\n  * @param {string|!Buffer} input The string or buffer to transform synchronously using the replacements. Does not support asynchronous replacements.\n  * @param {!Array<!_restream.Rule>} rules An array with rules.\n  * @return {string}\n  * @example\n```\n// markdown __ to html <em> implementation\nconst stream = SyncReplaceable('__hello world__', {\n  re: /__(\\S+)__/g,\n  replacement(match, p1) {\n    return `<em>${p1}</em>`\n  },\n})\n```\n  */\nfunction SyncReplaceable(input, rules) {\n  /**\n   * @suppress {globalThis}\n   */\n  function replace() {\n    const fr = rules.filter(checkRule)\n    const s = fr.reduce((acc, { re, replacement }) => {\n      /** @type {string} */\n      let Acc = acc\n      if (this._broke) return Acc\n\n      if (typeof replacement == 'string') {\n        Acc = Acc.replace(re, replacement)\n        return Acc\n      } else {\n        let commonError\n        const t = Acc.replace(re, (match, ...args) => {\n          commonError = new Error()\n          try {\n            if (this._broke) return match\n            const p = replacement.call(this, match, ...args)\n            return p\n          } catch (e) { // hide stack for sync stack traces\n            hideStack(commonError, e)\n          }\n        })\n        return t\n      }\n    }, `${input}`)\n    return s\n  }\n  replace.brake = () => { replace._broke = true }\n  return replace.call(replace)\n}\n\nexport default SyncReplaceable\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Rule} _restream.Rule\n */","import SyncReplaceable from '../SyncReplaceable'\n\n/**\n * @param {string} name\n */\nconst getDefaultRegExp = (name) => {\n  return new RegExp(`%%_RESTREAM_${name.toUpperCase()}_REPLACEMENT_(\\\\d+)_%%`, 'g')\n}\n\n/**\n * Make a unique string to replace cut text with.\n * @param {string} name\n * @param {number} index\n */\nconst getDefaultReplacement = (name, index) => {\n  return `%%_RESTREAM_${name.toUpperCase()}_REPLACEMENT_${index}_%%`\n}\n\n/**\n * Create a new marker.\n * @param {string} name The name of the matcher, used in the doc marker.\n * @param {!RegExp} re The regular expression used for detection.\n * @param {!_restream.MakeMarkersConfig} [conf] Additional configuration.\n * @param {function(string, number): string} [conf.getReplacement] The function used to create a replacement when some text needs to be cut.\n * @param {function(string): !RegExp} [conf.getRegex] The function used to create a RegExp to detect replaced chunks.\n * @return {!_restream.Marker} The marker.\n */\nconst makeMarker = (name, re, conf) => {\n  const {\n    getReplacement = getDefaultReplacement,\n    getRegex = getDefaultRegExp,\n  } = conf || {}\n  const regExp = getRegex(name)\n  return {\n    name,\n    re,\n    regExp,\n    getReplacement,\n    map: {},\n    lastIndex: 0,\n  }\n}\n\n/**\n * Make markers from a configuration object.\n * @param {!Object.<string, !RegExp>} matchers An object with types of markers to create as keys and their detection regexes as values.\n * @param {!_restream.MakeMarkersConfig} [config] Additional configuration.\n * @param {function(string, number): string} [config.getReplacement] The function used to create a replacement when some text needs to be cut.\n * @param {function(string): !RegExp} [config.getRegex] The function used to create a RegExp to detect replaced chunks.\n * @returns {!Object.<string, !_restream.Marker>} An object with markers for each requested type.\n */\nexport const makeMarkers = (matchers, config) => {\n  const res = Object.keys(matchers).reduce((acc, key) => {\n    const re = matchers[key]\n    const marker = makeMarker(key, re, config)\n    const m = {\n      ...acc,\n      [key]: marker,\n    }\n    return m\n  }, {})\n  return res\n}\n\n/**\n * Make a rule for pasting markers back.\n * @param {!_restream.Marker} marker A marker is used to cut and paste portions of text to exclude them from processing by other rules. Markers should be created using the `makeMarker` factory method that will assign their properties.\n * @param {!(_restream.Rule|Array<!_restream.Rule>)} [pipeRules] Any additional rules to replace the value of the marker before pasting it.\n * @returns {!_restream.Rule} A rule to paste previously replaced chunks.\n */\nexport const makePasteRule = (marker, pipeRules = []) => {\n  const { regExp: re, map } = marker\n  const rule = {\n    re,\n    replacement(match, index) {\n      const m = map[index]\n      delete map[index]\n      const pr = Array.isArray(pipeRules) ? pipeRules : [pipeRules]\n      const res = SyncReplaceable(m, pr)\n      return res\n    },\n  }\n  return rule\n}\n\n/**\n * Make a rule for initial replacement of markers.\n * @param {!_restream.Marker} marker A marker is used to cut and paste portions of text to exclude them from processing by other rules. Markers should be created using the `makeMarker` factory method that will assign their properties.\n * @returns {!_restream.Rule} A rule to cut matched chunks.\n */\nexport const makeCutRule = (marker) => {\n  const { re, map, getReplacement, name } = marker\n  const rule = {\n    re,\n    replacement(match) {\n      const { lastIndex } = marker\n      map[lastIndex] = match\n      marker.lastIndex += 1\n      const m = getReplacement(name, lastIndex)\n      return m\n    },\n  }\n  return rule\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Rule} _restream.Rule\n */\n\n/* documentary types/markers.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_restream.Marker} Marker A marker is used to cut and paste portions of text to exclude them from processing by other rules. Markers should be created using the `makeMarker` factory method that will assign their properties.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _restream.Marker A marker is used to cut and paste portions of text to exclude them from processing by other rules. Markers should be created using the `makeMarker` factory method that will assign their properties.\n * @prop {string} name The name of the marker for annotation purposes.\n * @prop {function(string, number): string} getReplacement The function to generate marker placeholders which can be then found, e.g., for (name: `marker`, index: `10`) by default _Restream_ will generate `%%_RESTREAM_MARKER_REPLACEMENT_10_%%`, but can be overriden with this method.\n * @prop {!RegExp} re The regular expression used for detection of the match.\n * @prop {!RegExp} regExp The generated regular expression to replace the marker back to its original value.\n * @prop {!Object<number, string>} map The map which holds detected matches at their indexes.\n * @prop {number} lastIndex The index of the last inserted element. Starts with 0.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_restream.MakeMarkersConfig} MakeMarkersConfig Additional configuration.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _restream.MakeMarkersConfig Additional configuration.\n * @prop {function(string, number): string} [getReplacement] The function used to create a replacement when some text needs to be cut.\n * @prop {function(string): !RegExp} [getRegex] The function used to create a RegExp to detect replaced chunks.\n */\n","import Stream, { Transform } from 'stream'\nimport cleanStack from '@artdeco/clean-stack'\nimport { collect } from 'catchment'\nimport { checkRule, hideStack } from './lib'\n\nexport default class Replaceable extends Transform {\n  /**\n   * Replaceable class that extends Transform and pushes data when it's done replacing each incoming chunk. If the replacement is passed as a function, it will work in the same way as the replacer for `string.replace` method (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace), taking the `match` as the first argument, and matched `p1`, `p2`, _etc_ parameters as following arguments. The replacer can also be an async function.\n   * @param {!(_restream.Rule|Array<!_restream.Rule>)} rules A single replacement rule, or multiple rules.\n   * @param {!stream.TransformOptions} [options] The options for the transform stream.\n   * @example\n   *\n```\n// markdown __ to html <em> implementation\nconst stream = replaceStream({\n  re: /__(\\S+)__/g,\n  replacement(match, p1) {\n    return `<em>${p1}</em>`\n  },\n})\n```\n   */\n  constructor(rules, options) {\n    super(options)\n    const re = Array.isArray(rules) ? rules : [rules]\n    const fr = re.filter(checkRule)\n    this.rules = fr\n    /**\n     * Whether the _Replaceable_ will not apply any more rules.\n     * @type {boolean}\n     */\n    this._broke = false\n    this._options = options\n  }\n\n  /**\n   * Creates a new replaceable to replace the given string, buffer or stream using the rules of the current stream. Calling `brake` will also set `_broke` on the parent stream.\n   * @param {string|!Buffer|!Stream} input The input to replace.\n   * @param {!Object} [context] The context to assign to the new replaceable.\n   */\n  async replace(input, context) {\n    const replaceable = new Replaceable(this.rules, this._options)\n    if (context) Object.assign(replaceable, context)\n    const res = await Replaceable.replace(replaceable, input)\n    if (replaceable._broke) this.brake()\n    if (context) Object.keys(context).forEach(key => {\n      context[key] = replaceable[key]\n    })\n    return res\n  }\n  /**\n   * The method to end the stream with given data, and collect the result.\n   * @param {!Replaceable} replaceable\n   * @param {string|!Buffer|!Stream} input The data or stream to end the _Replaceable_ with.\n   */\n  static async replace(replaceable, input) {\n    return replace(replaceable, input)\n  }\n\n  /**\n   * Stop executing further after the current rule.\n   */\n  brake() {\n    this._broke = true\n  }\n\n  /**\n   * @param {string|!Buffer} chunk The incoming chunk, or an object if the stream was started in object mode.\n   */\n  async reduce(chunk) {\n    /** @type {string} */\n    const s = await this.rules.reduce(async (acc, { re, replacement }) => {\n      /** @type {string} */\n      let string = await acc\n      if (this._broke) return string\n\n      if (typeof replacement == 'string') {\n        string = string.replace(re, replacement)\n      } else {\n        const promises = []\n        let commonError\n        const t = string.replace(re, (match, ...args) => {\n          commonError = new Error()\n          try {\n            if (this._broke) {\n              if (promises.length)\n                return promises.push(Promise.resolve(match))\n              return match\n            }\n            const p = replacement.call(this, match, ...args)\n            if (p instanceof Promise) {\n              promises.push(p)\n            }\n            return p\n          } catch (e) { // hide stack for sync stack traces\n            hideStack(commonError, e)\n          }\n        })\n        if (promises.length) {\n          try { // hide stack only for when throw happens before awaits\n            const data = await Promise.all(promises)\n            string = string.replace(re, () => data.shift())\n          } catch (e) {\n            hideStack(commonError, e)\n          }\n        } else {\n          string = t\n        }\n      }\n      return string\n    }, `${chunk}`)\n\n    return s\n  }\n  /**\n   * @suppress {checkTypes}\n   * @returns {!Promise}\n   */\n  async _transform(chunk, _, next) {\n    try {\n      const s = await this.reduce(chunk)\n      this.push(s)\n      next()\n    } catch (e) {\n      const s = cleanStack(e.stack)\n      e.stack = s\n      next(e)\n    }\n  }\n}\n\n/**\n * The method to end the stream with given data, and collect the result.\n * @param {!Replaceable} replaceable\n * @param {string|!Buffer|!Stream} input The data or stream to end the _Replaceable_ with.\n */\nexport async function replace(replaceable, input) {\n  if (input instanceof Stream) {\n    input.pipe(replaceable)\n  } else {\n    replaceable.end(input)\n  }\n  /** @type {string} */\n  const data = await collect(replaceable)\n  return data\n}\n\n/**\n * The class for when serial execution of asynchronous replacements withing the same rule are needed.\n */\nexport class SerialAsyncReplaceable extends Replaceable {\n  /**\n   * @param {!(_restream.Rule|Array<!_restream.Rule>)} rules\n   */\n  constructor(rules) {\n    super(rules)\n    this.promise = Promise.resolve()\n  }\n  addItem(fn) {\n    const pp = this.promise.then(fn)\n    this.promise = pp\n    return pp\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Rule} _restream.Rule\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').AsyncReplacer} _restream.AsyncReplacer\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Replacer} _restream.Replacer\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').TransformOptions} stream.TransformOptions\n */","import { SyncReplaceable } from 'restream'\r\n\r\n/**\r\n * Returns the name of the opening tag from the string starting with <, or `undefined`.\r\n * @param {string} string The string where to find the tag.\r\n * @example\r\n * const s = '<div>hello world</div>'\r\n * const tag = getTagName(s) // div\r\n */\r\nexport const getTagName = (string) => {\r\n  const [, tagName] = /<\\s*(.+?)(?:\\s+[\\s\\S]+)?\\s*\\/?\\s*>/.exec(string) || []\r\n  return tagName\r\n}\r\n\r\n// * const getClass = o => Object.keys(o).join(' ')\r\n\r\n/**\r\n * Parses a string with attributes written in jsx, e.g., `id={id}` into an object.\r\n * @param {string} props The string with properties in the tag\r\n * @example\r\n *\r\n * const El = getProps(\"class={'hello world'} id={id}\")\r\n * // =>\r\n   {\r\n     class: \"'hello world'\",\r\n     id: 'id'\r\n    }\r\n *\r\n */\r\nexport\r\nconst getProps = (props) => {\r\n  let stack = 0\r\n  const positions = []\r\n  let current\r\n  SyncReplaceable(props, [\r\n    {\r\n      re: /[{}]/g,\r\n      replacement(m, i) {\r\n        const closing = m == '}'\r\n        const opening = !closing\r\n        if (!stack && closing)\r\n          throw new Error('A closing } is found without opening one.')\r\n        stack += opening ? 1 : -1\r\n        if (stack == 1 && opening) {\r\n          current = {\r\n            open: i,\r\n          }\r\n        } else if (stack == 0 && closing) {\r\n          current.close = i\r\n          positions.push(current)\r\n          current = {}\r\n        }\r\n      },\r\n    },\r\n  ])\r\n  if (stack) throw new Error(`Unbalanced props (level ${stack}) ${props}`)\r\n  const obj = {}\r\n  const destructuring = []\r\n  const whitespace = {}\r\n  const lastClose = positions.reduce((acc, { open, close }) => {\r\n    const before = props.slice(acc, open)\r\n    const [, wsBefore, propName, wsBeforeAssign, afterAssign] = /(\\s*)(\\S+)(\\s*)=(\\s*)$/.exec(before) || []\r\n    const val = props.slice(open + 1, close)\r\n    if (!propName && !/\\s*\\.\\.\\./.test(val))\r\n      throw new Error('Could not detect prop name')\r\n    if (!propName) {\r\n      destructuring.push(val)\r\n    } else {\r\n      obj[propName] = val\r\n    }\r\n    whitespace[propName] = { before: wsBefore, beforeAssign: wsBeforeAssign, afterAssign }\r\n    const beforeOrNot = before || '' // when using destructuring\r\n    const propOrNot = propName || ''\r\n    const bb = beforeOrNot.slice(0, beforeOrNot.length - propOrNot.length - 1)\r\n    const { plain, whitespace: ws } = getPlain(bb)\r\n    Object.assign(obj, plain)\r\n    Object.assign(whitespace, ws)\r\n    return close + 1\r\n  }, 0)\r\n  // make sure plain attrs are there when no {} are given\r\n  if (!positions.length) {\r\n    const { plain, whitespace: ws } = getPlain(props)\r\n    Object.assign(obj, plain)\r\n    Object.assign(whitespace, ws)\r\n  } else {\r\n    const whatsLeft = props.slice(lastClose)\r\n    const { plain, whitespace: ws } = getPlain(whatsLeft)\r\n    Object.assign(obj, plain)\r\n    Object.assign(whitespace, ws)\r\n  }\r\n  return { obj, destructuring, whitespace }\r\n}\r\n\r\n/**\r\n * Returns the matches without {}, such as `id=\"test\"`.\r\n * @param {string} string The string with plain attributes.\r\n */\r\nconst getPlain = (string) => {\r\n  const r = []\r\n  const whitespace = {}\r\n  const res = string.replace(/(\\s*)(\\S+)(\\s*)=(\\s*)([\"'])([\\s\\S]+?)\\5/g, (m, wsBefore, name, wsBeforeAssign, wsAfterAssign, q, val, i) => {\r\n    whitespace[name] = { before: wsBefore, beforeAssign: wsBeforeAssign, afterAssign: wsAfterAssign }\r\n    r.push({ i, name, val: `${q}${val}${q}` })\r\n    return '%'.repeat(m.length)\r\n  })\r\n  res.replace(/(\\s*)([^\\s%]+)/g, (m, ws, name, i) => {\r\n    whitespace[name] = { before: ws }\r\n    r.push({ i, name, val: 'true' }) // boolean\r\n  })\r\n  const obj = [...r.reduce((acc, { i, name, val }) => {\r\n    acc[i] = [name, val]\r\n    return acc\r\n  }, [])].filter(Boolean).reduce((acc, [name, val]) => {\r\n    acc[name] = val\r\n    return acc\r\n  }, {})\r\n  return { plain: obj, whitespace }\r\n}\r\n\r\n/**\r\n * Accepts the parsed node properties to make a JS object string out of them.\r\n * @param {!Object<string, string>} pp The properties out of which to make a string object.\r\n * @returns {string|null} Either a JS object body string, or null if no keys were in the object.\r\n */\r\nexport\r\nconst makeObjectBody = (pp, destructuring = [], quoteProps = false, whitespace = {}, beforeCloseWs = '') => {\r\n  const keys = Object.keys(pp)\r\n  const { length } = keys\r\n  if (!length && !destructuring.length) return '{}'\r\n  const pr = `{${keys.reduce((a, k) => {\r\n    const v = pp[k]\r\n    const kk = quoteProps || k.indexOf('-') != -1 ? `'${k}'` : k\r\n    const { before = '', beforeAssign = '', afterAssign = '' } = whitespace[k] || {}\r\n    return [...a, `${before}${kk}${beforeAssign}:${afterAssign}${v}`]\r\n  }, destructuring).join(',')}${beforeCloseWs}}`\r\n  return pr\r\n}\r\n\r\nexport const isComponentName = (tagName = '') => {\r\n  const [t] = tagName\r\n  if (!t) throw new Error('No tag name is given')\r\n  return t.toUpperCase() == t\r\n}\r\n\r\n/**\r\n * Creates a string invocation of the pragma function.\r\n * @param {string} tagName The name of the tag to create, or a reference to a component function.\r\n * @param {!Object<string, string>} props The properties of the element. The properties' values can be passed as strings or references as the `e` function will be called under the scope in which the JSX is written, e.g., when creating components `const C = ({ reference }) => <div id={reference} class=\"String\"/>`.\r\n * @param {!Array<string>} children The array with the child nodes which are strings, but encode either a reference, a string or an invocation the the `e` function again. Thus the jsx is parsed recursively depth-first.\r\n * @param {!Array<string>} [destructuring] Any properties for destructuring.\r\n * @param {boolean} [quoteProps=false] Whether to quote the properties' keys (for Closure compiler).\r\n * @example\r\n *\r\n * const r = pragma('div', { id: \"'STATIC_ID'\" }, [\"'Hello, '\", \"test\", \"'!'\"])\r\n * // =>\r\n * e('div',{ id: 'STATIC_ID' },['Hello, ', test, '!'])\r\n */\r\nexport const pragma = (tagName, props = {}, children = [], destructuring = [], quoteProps = false, warn = null, whitespace = {}, beforeCloseWs = '') => {\r\n  const cn = isComponentName(tagName)\r\n  const tn = cn ? tagName : `'${tagName}'`\r\n  if (!Object.keys(props).length && !children.length && !destructuring.length) {\r\n    return `h(${tn})`\r\n  }\r\n  const qp = cn && quoteProps == 'dom' ? false : quoteProps\r\n  if (!cn && destructuring.length && (!quoteProps || quoteProps == 'dom')) {\r\n    warn && warn(`JSX: destructuring ${destructuring.join(' ')} is used without quoted props on HTML ${tagName}.`)\r\n  }\r\n  const pr = makeObjectBody(props, destructuring, qp, whitespace, beforeCloseWs)\r\n  const c = children.reduce((acc, cc, i) => {\r\n    const prev = children[i-1]\r\n    const comma = prev && /\\S/.test(prev) ? ',' : ''\r\n    return `${acc}${comma}${cc}`\r\n  }, '')\r\n  const res = `h(${tn},${pr}${c ? `,${c}` : ''})`\r\n  return res\r\n}\r\n\r\n// export const newPragma = (tagName, ...args) => {\r\n//   return `e('${tagName}',${args.join(',')})`\r\n// }\r\n\r\n// * @todo In strict mode, when the length is more, throws an error. In advanced mode, the replacement should be aligned so it is possible to debug it.\r\n\r\n/**\r\n * Replaces a piece of string inside of a string with another chunk.\r\n * @param {string} input The string inside of which the chunk needs to be replaced.\r\n * @param {number} index The index of the `<` found with `detect-jsx.findPosition`.\r\n * @param {number} length The length of the string that needs to be cut out.\r\n * @param {string} chunk The new string that needs to be placed back into the input.\r\n *\r\n */\r\nexport\r\nconst replaceChunk = (input, index, length, chunk) => {\r\n  const before = input.slice(0, index)\r\n  const after = input.slice(index + length)\r\n  const ld = length - chunk.length\r\n  // if (ld < 0)\r\n  // console.warn('The chunks length is more that replaced input')\r\n  // throw new Error('The length of the chunk cannot be more than of the replaced value.')\r\n  let p = chunk\r\n  if (ld > 0) {\r\n    p = `${' '.repeat(ld)}${p}`\r\n  }\r\n  const res = `${before}${p}${after}`\r\n  return res\r\n}","import { SyncReplaceable, makeMarkers, makeCutRule } from 'restream'\r\nimport { getTagName } from './'\r\n\r\nconst findEnding = (string, rules = []) => {\r\n  let stack = 0\r\n  let contentEnd\r\n  const preString = SyncReplaceable(string, [\r\n    ...rules,\r\n    {\r\n      // once the tag is opened with <, its closing symbol > will always be even (nevermind comments & strings)\r\n      re: /[<>]/g,\r\n      replacement(m, i) {\r\n        if (contentEnd) return m\r\n        const opening = m == '<'\r\n        const closing = !opening\r\n        stack += opening ? 1 : -1\r\n        if (stack == 0 && closing) {\r\n          contentEnd = i\r\n        }\r\n        return m\r\n      },\r\n    },\r\n  ])\r\n  if (stack) throw new Error(1)\r\n  return { preString, contentEnd }\r\n}\r\n\r\n/**\r\n * Returns the outer body of the tag.\r\n * @param {string} stringWithTag The string in which to find the closing tag. Must start with a `<`.\r\n */\r\nconst extract = (stringWithTag) => {\r\n  const tagName = getTagName(stringWithTag)\r\n  let contentEnd\r\n  let props\r\n  const { arrow } = makeMarkers({\r\n    arrow: /=>/g,\r\n  })\r\n  let preString\r\n  try {\r\n    ({ preString, contentEnd } = findEnding(stringWithTag, [ makeCutRule(arrow) ]))\r\n  } catch (err) {\r\n    if (err === 1) throw new Error(`Could not find the matching closing > for ${tagName}.`)\r\n  }\r\n\r\n  const string = preString.slice(0, contentEnd + 1)\r\n  let content = string\r\n    .replace(/<\\s*[^\\s/>]+/, '')\r\n  const selfClosing = /\\/\\s*>$/.test(content)\r\n  if (selfClosing) {\r\n    props = content.replace(/\\/\\s*>$/, '')\r\n    content = ''\r\n    return new ExtractedJSX({\r\n      string: string.replace(arrow.regExp, '=>'),\r\n      props: props.replace(arrow.regExp, '=>'),\r\n      content: '',\r\n      tagName,\r\n    })\r\n  }\r\n  // now find the corresponding closing tag\r\n  props = content.replace(/>$/, '')\r\n  const contentStart = contentEnd + 1\r\n  contentEnd = false\r\n  let stack = 1\r\n  let stringEnd\r\n  SyncReplaceable(preString, [{\r\n    // [\\\\s\\\\S] is to not catch the very beginning\r\n    re: new RegExp(`[\\\\s\\\\S](?:<\\\\s*${tagName}(\\\\s+|>)|/\\\\s*${tagName}\\\\s*>)`, 'g'),\r\n    replacement(m, opensClosing, i, s) {\r\n      if (contentEnd) return m\r\n      const closing = !opensClosing && m.endsWith('>')\r\n      const opening = !closing\r\n\r\n      if (opening) {\r\n        const untilEnd = s.slice(i)\r\n        const { contentEnd: ce } = findEnding(untilEnd\r\n          .replace(/^[\\s\\S]/, ' ')\r\n          // e.g., <span><a /><span></span></span>\r\n          //                 ^\r\n        )\r\n        const t = untilEnd.slice(0, ce + 1)\r\n        const tSelfClosing = /\\/\\s*>$/.test(t)\r\n        if (tSelfClosing) return m\r\n      }\r\n\r\n      stack += opening ? 1 : -1\r\n      if (stack == 0 && closing) {\r\n        contentEnd = i\r\n        stringEnd = contentEnd + m.length\r\n      }\r\n      return m\r\n    },\r\n  }])\r\n  if (stack) throw new Error(`Could not find the matching closing </${tagName}>.`)\r\n  content = preString.slice(contentStart, contentEnd)\r\n  const string2 = preString.slice(0, stringEnd)\r\n    .replace(arrow.regExp, '=>')\r\n\r\n  return new ExtractedJSX({\r\n    string: string2,\r\n    props: props.replace(arrow.regExp, '=>'),\r\n    content: content.replace(arrow.regExp, '=>'),\r\n    tagName,\r\n  })\r\n}\r\n\r\nexport class ExtractedJSX {\r\n  /**\r\n   * @param {{ string: string, props: string, content: string, tagName: string }} properties\r\n   */\r\n  constructor(properties) {\r\n    this.string = properties.string\r\n    this.props = properties.props\r\n    this.content = properties.content\r\n    this.tagName = properties.tagName\r\n  }\r\n}\r\n\r\nexport default extract","import { SyncReplaceable } from 'restream'\r\nimport extract from './extract'\r\n\r\n/**\r\n * Make a quoted string to interpret by JS.\r\n * @param {string} s\r\n * @example\r\n *\r\n * getQuoted('The mind always seeks to equilibrium.')\r\n * // result:\r\n * `The mind always seeks to equilibrium.`\r\n */\r\nexport const getQuoted = (s) => {\r\n  let _b = '', _a = ''\r\n  const r = s\r\n    .replace(/^(\\r?\\n\\s*)([\\s\\S]+)?/, (m, b, v = '') => {\r\n      _b = b\r\n      return v\r\n    })\r\n    .replace(/([\\s\\S]+?)?(\\r?\\n\\s*)$/, (m, v = '', a = '') => {\r\n      _a = a\r\n      return v\r\n    })\r\n  const rr = r ? `\\`${r}\\`` : ''\r\n  return `${_b}${rr}${_a}`\r\n}\r\n\r\n/**\r\n * Returns the array of children for an element by extracting the parts in `{}`.\r\n * @param {string} string\r\n * @example\r\n * parseSimpleContent('Hello, {test}!')\r\n * // result:\r\n * [`Hello, `, test, `!`]\r\n */\r\nexport const parseSimpleContent = (string) => {\r\n  const temps = []\r\n  // let prev = 0\r\n  let current = {}\r\n  let expressionStack = 0\r\n  let jsxStack = 0\r\n  SyncReplaceable(string, [{\r\n    re: /[<{}]/g,\r\n    replacement(m, i) {\r\n      if (i < jsxStack) return // blocked by jsx\r\n      const isExpression = /[{}]/.test(m)\r\n      let opening\r\n      if (isExpression) {\r\n        opening = m == '{'\r\n        expressionStack += opening ? 1 : -1\r\n        if (expressionStack == 1 && current.from == undefined) current.from = i\r\n        else if (expressionStack == 0) {\r\n          current.to = i + 1\r\n          current.expression = string.slice(current.from + 1, i)\r\n          temps.push(current)\r\n          current = {}\r\n        }\r\n      } else {\r\n        if (expressionStack) return m\r\n        const extractedJsx = extract(string.slice(i))\r\n        jsxStack = i + extractedJsx.string.length\r\n        current.extractedJsx = extractedJsx\r\n        current.to = jsxStack\r\n        current.from = i\r\n        temps.push(current)\r\n        current = {}\r\n      }\r\n    },\r\n  }, {\r\n  }])\r\n  const res = temps.length ? getTemps(string, temps) : [getQuoted(string)]\r\n  return res\r\n}\r\n\r\n/**\r\n * Returns the array with broken down string parts either as other strings or expressions.\r\n * @param {string} string The initial string.\r\n * @param {Array<!{from: number, to: number, expression: string }>} temps\r\n * @return {!Array<string>}\r\n * @private This is called by parseSimpleContent.\r\n */\r\nconst getTemps = (string, temps) => {\r\n  let lastTo = 0\r\n  const ar = temps.reduce((acc, { from, to, expression, extractedJsx }) => {\r\n    const b = string.slice(lastTo, from)\r\n    if (b) acc.push(getQuoted(b))\r\n    lastTo = to\r\n    if (expression) acc.push(expression)\r\n    else if (extractedJsx) acc.push(extractedJsx)\r\n    return acc\r\n  }, [])\r\n  if (lastTo < string.length) {\r\n    const a = string.slice(lastTo, string.length)\r\n    // .trim()\r\n    if (a) ar.push(getQuoted(a))\r\n  }\r\n  return ar\r\n}","import detectJSX from '@a-la/detect-jsx'\r\nimport { parseSimpleContent } from './parse-content'\r\nimport { pragma, replaceChunk, getProps } from './'\r\nimport extract, { ExtractedJSX } from './extract'\r\n\r\n\r\n/* <div id={'id'}>\r\n  Hello, {test}! {children}\r\n  <div class={'TEST'} id={id}>test</div>\r\n</div> */\r\n\r\n/**\r\n * The entry point to transpiling a file.\r\n * @param {string} input The string to transpile.\r\n * @returns {string} The transpiled source code with `h` pragma for hyperscript invocations.\r\n */\r\nconst transpileJSX = (input, config = {}) => {\r\n  const { quoteProps, warn } = config\r\n  const position = detectJSX(input)\r\n  if (position === null) return input\r\n\r\n  const s = input.slice(position)\r\n  const { props = '', content, tagName, string: { length } } = extract(s)\r\n  const children = parseContent(content, quoteProps, warn)\r\n  const { obj, destructuring, whitespace } = getProps(props.replace(/^ */, ''))\r\n  const beforeCloseWs = /\\s*$/.exec(props) || ['']\r\n  const f = pragma(tagName, obj, children, destructuring, quoteProps, warn, whitespace, beforeCloseWs)\r\n  const res = replaceChunk(input, position, length, f)\r\n  // find another one one\r\n  const newRes = transpileJSX(res, config)\r\n  return newRes\r\n}\r\n\r\nexport default transpileJSX\r\n\r\n// let f\r\n// if (props) {\r\n//   f = pragma(tagName, prop, children) // `p(tag, { ...props }, children)`\r\n// } else if (children.length == 1) {\r\n//   f = pragma(tagName, children[0]) // `e(tag, child)`\r\n// } else if (children.length) {\r\n//   f = newPragma(tagName, ...children) // `e(tag, child, child2)`\r\n// }\r\n\r\n// parse the content bro parse it\r\n/**\r\n * This function will return an array with content of a jsx tag, and the content can be a function to create an element (pragma), a string, or an expression.\r\n * @param {string} content\r\n * @param {boolean} [quoteProps=false] Whether to quote properties.\r\n */\r\nexport const parseContent = (content, quoteProps = false, warn = null) => {\r\n  if (!content) return []\r\n  // const C = content\r\n  // .split('\\n').filter(a => !/^\\s*$/.test(a)).join('\\n')\r\n  const contents = parseSimpleContent(content) // split by expressions\r\n  const jsx = contents.reduce((acc, string) => {\r\n    if (string instanceof ExtractedJSX) {\r\n      const { props = '', content: part, tagName } = string\r\n      const { obj, destructuring } = getProps(props)\r\n      const children = parseContent(part, quoteProps, warn)\r\n      const p = pragma(tagName, obj, children, destructuring, quoteProps, warn)\r\n      return [...acc, p]\r\n    }\r\n    const j = detectJSX(string)\r\n    if (j) {\r\n      const s = string.slice(j)\r\n      const { string: { length }, props = '', content: part, tagName } = extract(s)\r\n      const { obj, destructuring } = getProps(props)\r\n      const children = parseContent(part, quoteProps, warn)\r\n      const p = pragma(tagName, obj, children, destructuring, quoteProps, warn)\r\n      const strBefore = string.slice(0, j)\r\n      const strAfter = string.slice(j + length)\r\n      return [...acc, `${strBefore}${p}${strAfter}`]\r\n    }\r\n    return [...acc, string]\r\n  }, [])\r\n  return jsx\r\n}","import transpileJSX from './lib/components'\r\nimport { SyncReplaceable,\r\n  makeMarkers, makeCutRule, makePasteRule } from 'restream'\r\n\r\n/**\r\n * Process a JSX file.\r\n * @param {string} input The source code with JSX to transpile.\r\n * @param {!_alaJsx.Config} config Options for the program.\r\n * @param {(boolean|string)} [config.quoteProps=false] Whether to surround property names with quotes. When the `dom` string is passed, it will only quote props for invoking html components, i.e., those that start with a lowercase letter (E.g., for the _Google Closure Compiler_). Default `false`.\r\n * @param {function(...string)} [config.warn] The function to receive warnings, e.g., when destructuring of properties is used on dom elements (for Closure Compiler).\r\n */\r\nconst jsx = (input, config = {}) => {\r\n  const { e, defObj, ef, i, ias, ii } = makeMarkers({\r\n    defObj: /^ *export\\s+default\\s+{[\\s\\S]+?}/mg,\r\n    e: /^ *export\\s+(?:default\\s+)?/mg,\r\n    ef: /^ *export\\s+{[^}]+}\\s+from\\s+(['\"])(?:.+?)\\1/mg,\r\n    i: /^ *import(\\s+([^\\s,]+)\\s*,?)?(\\s*{(?:[^}]+)})?\\s+from\\s+['\"].+['\"]/gm,\r\n    ias: /^ *import\\s+(?:(.+?)\\s*,\\s*)?\\*\\s+as\\s+.+?\\s+from\\s+['\"].+['\"]/gm,\r\n    ii: /^ *import\\s+['\"].+['\"]/gm,\r\n  }, {\r\n    getReplacement(name, index) {\r\n      return `/*%%_RESTREAM_${name.toUpperCase()}_REPLACEMENT_${index}_%%*/`\r\n    },\r\n    getRegex(name) {\r\n      return new RegExp(`/\\\\*%%_RESTREAM_${name.toUpperCase()}_REPLACEMENT_(\\\\d+)_%%\\\\*/`, 'g')\r\n    },\r\n  })\r\n  const s = SyncReplaceable(input, [\r\n    makeCutRule(ef), makeCutRule(defObj), makeCutRule(e),\r\n    makeCutRule(i), makeCutRule(ias), makeCutRule(ii)])\r\n  const tt = transpileJSX(s, config)\r\n  const as = SyncReplaceable(tt, [\r\n    makePasteRule(ef), makePasteRule(defObj), makePasteRule(e),\r\n    makePasteRule(i), makePasteRule(ias), makePasteRule(ii)])\r\n  return as\r\n}\r\n\r\nexport default jsx\r\n\r\n/* documentary types/index.xml */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {_alaJsx.Config} Config Options for the program.\r\n */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {Object} _alaJsx.Config Options for the program.\r\n * @prop {(boolean|string)} [quoteProps=false] Whether to surround property names with quotes. When the `dom` string is passed, it will only quote props for invoking html components, i.e., those that start with a lowercase letter (E.g., for the _Google Closure Compiler_). Default `false`.\r\n * @prop {function(...string)} [warn] The function to receive warnings, e.g., when destructuring of properties is used on dom elements (for Closure Compiler).\r\n */\r\n","import { Replaceable } from 'restream'\nimport { relative, dirname, join } from 'path'\nimport resolveDependency from 'resolve-dependency'\nimport findPackageJson from 'fpj'\nimport split from '@depack/split'\nimport { checkIfLib, findPackage } from './lib'\n\nexport default class BundleTransform extends Replaceable {\n  /**\n   * @param {string} path Path to the file.\n   * @param {string} to Where the file will be saved.\n   */\n  constructor(path, to) {\n    super([])\n    const replacement = this.replacement.bind(this)\n    this.rules = [\n      {\n        re: /^( *import(?:\\s+[^\\s,]+\\s*,?)?(?:\\s*{(?:[^}]+)})?\\s+from\\s+)['\"](.+)['\"]/gm,\n        replacement,\n      },\n      {\n        re: /^( *import\\s+['\"](.+)['\"])/gm,\n        replacement,\n      },\n      {\n        re: /^( *export\\s+{[^}]+?}\\s+from\\s+)['\"](.+?)['\"]/gm,\n        replacement,\n      },\n    ]\n    this._nodeModules = []\n    this.css = []\n    this._deps = []\n    this.path = path\n    this.to = to\n    this.preactExtern = false\n  }\n  /**\n   * The paths to node_modules in the file.\n   */\n  get nodeModules() {\n    return this._nodeModules\n  }\n  /**\n   * The paths to dependencies.\n   */\n  get deps() {\n    return this._deps\n  }\n  /**\n   * The replacement function that adds extensions to required modules and resolves paths to packages from node_modules.\n   */\n  async replacement(m, pre, from) {\n    const dir = dirname(this.path)\n    if (from.endsWith('.css')) {\n      this.css.push(from)\n      return m\n    }\n    if (checkIfLib(from)) {\n      const { path } = await resolveDependency(from, this.path)\n\n      let relativePath = relative(dir, path)\n\n      if (path.startsWith('..')) {\n        const foundLinked = findPackage(path)\n        if (foundLinked) {\n          const p = join('node_modules', foundLinked)\n          relativePath = relative(dir, p)\n        }\n      }\n      this.deps.push(relativePath)\n\n      const dot = relativePath.startsWith('.') ? '' : './'\n\n      if (m == pre) return pre.replace(/(['\"]).+\\1/, `$1${dot}${replace(relativePath)}$1`)\n      const r = `${pre}'${dot}${replace(relativePath)}'`\n      return r\n    }\n    const { name: n } = split(from)\n    if (n == 'preact' && this.preactExtern) {\n      const { entry } = await findPackageJson(dir, '@externs/preact')\n      this.nodeModules.push(entry)\n      return `${pre}'@externs/preact'`\n    }\n    return m\n    // this is not really doing anything\n    // const { packageJson, entry } = await findPackageJson(dir, n)\n    // if (paths) {\n    //   const d = dirname(packageJson)\n    //   const { path: p } = await resolveDependency(join(d, paths))\n    //   this.nodeModules.push(p)\n    //   const relativePath = relative(this.to, p)\n    //   return `${pre}'${relativePath}'`\n    // }\n    // this.nodeModules.push(entry)\n    // const modRel = relative(this.to, entry)\n    // return `${pre}'${modRel}'`\n  }\n}\n\nconst replace = (string) => {\n  return string.replace(/(\\/index)?\\.js$/, '')\n}","import { dirname, join, resolve } from 'path'\n\nexport const checkIfLib = modName => /^[./]/.test(modName)\n\nexport const findPackage = (entry) => {\n  let p = entry\n  while (p != '.') {\n    p = dirname(p)\n    try {\n      const resolved = resolve(p, 'package.json')\n      const r = require(resolved)\n      const rest = entry.replace(p, '')\n      // require will resolve symlinks\n      const j = join(r['name'], 'package.json')\n      const actualPath = require.resolve(j, {\n        paths: [process.cwd()],\n      })\n      if (resolved == actualPath) {\n        // bingo\n        return join(r['name'], rest)\n      }\n    } catch (err) {\n    /**/}\n  }\n}\n","import { dirname, join, relative, resolve } from 'path'\nimport { read, write, ensurePath } from '@wrote/wrote'\nimport transpileJSX from '@a-la/jsx'\nimport { collect } from 'catchment'\nimport { c } from 'erte'\nimport staticAnalysis from 'static-analysis'\nimport BundleTransform from './BundleTransform'\n\n/**\n * @param {string} entry The path to the file file.\n */\nexport const processFile = async (entry, config, cache) => {\n  const { cachedNodeModules, cachedFiles } = cache\n  const { tempDir, preact, preactExtern } = config\n  const source = await read(entry)\n  const isJSX = entry.endsWith('.jsx')\n\n  const dir = relative('', dirname(entry))\n  const to = join(tempDir, dir)\n  const bt = new BundleTransform(entry, to)\n  bt.preactExtern = preactExtern\n\n  const T = (preact || preactExtern) && isJSX ? addPreact(source, preactExtern) : source\n  bt.end(T)\n  const transformed = await collect(bt)\n  const transpiled = isJSX ? await transpile(transformed, entry): transformed\n  if (entry.startsWith('..')) {\n    // possibly linked package\n    let found\n    let p = entry\n    while (p != '.' && !found) {\n      p = dirname(p)\n      try {\n        const r = require(resolve(p, 'package.json'))\n        const rest = entry.replace(p, '')\n        found = join('node_modules', r['name'], rest)\n      } catch (err) {\n      /**/}\n    }\n    if (!found) console.warn('Entry path %s is above CWD and linked package is not found. The temp file will be generated in %s', entry, join(tempDir, entry))\n    else entry = found\n  }\n  const tto = join(tempDir, entry)\n  await ensurePath(tto)\n\n  await write(tto, transpiled)\n\n  // now deal with dependencies\n  const depPaths = bt.deps\n    .map(d => join(dir, d))\n    .filter(d => !(d in cachedFiles))\n  const nodeModules = bt.nodeModules\n    .filter(d => !(d in cachedNodeModules))\n\n  nodeModules.forEach(nm => { cachedNodeModules[nm] = 1 })\n  depPaths.forEach(dp => { cachedFiles[dp] = 1 })\n\n  // add node modules\n  const sa = await staticAnalysis(nodeModules)\n  sa.forEach(({ entry: e, packageJson }) => {\n    if (packageJson) cachedNodeModules[packageJson] = 1\n    cachedNodeModules[e] = 1\n  })\n\n  await bt.css.reduce(async (acc, css) => {\n    await acc\n    const path = join(dir, css)\n    const file = await read(path)\n    const text = `import injectStyle from 'depack/inject-css'\n\ninjectStyle(\\`${file}\\`)`\n    const cssTo = join(to, `${css}.js`)\n    await write(cssTo, text)\n  }, {})\n\n  await depPaths.reduce(async (acc, depPath) => {\n    await acc\n    await processFile(depPath, config, cache)\n  }, {})\n}\n\nconst addPreact = (source, preactExtern) => {\n  const t = preactExtern ? '@externs/preact' : 'preact'\n  return `import { h } from '${t}'\n${source}`\n}\n\nconst transpile = async (source, entry) => {\n  return await transpileJSX(source, {\n    quoteProps: 'dom',\n    warn(message) {\n      console.warn(c(message, 'yellow'))\n      console.log(entry)\n    },\n  })\n}","import { processFile } from './lib'\nimport { join, relative } from 'path'\n\n/**\n * Generates a temp directory for the given entry file and transpiles JSX files. Returns the list of all dependencies including in the `node_modules`.\n * @param {string} entry The path to the entry file.\n * @param {!_depack.TempConfig} [config] Options for generating the temp directory.\n * @param {string} [config.tempDir=\"depack-temp\"] The directory in which to place temp files. Default `depack-temp`.\n * @param {boolean} [config.preact=false] Whether to add `import { h } from 'preact'` automatically at the top of each JSX file. Default `false`.\n * @param {boolean} [config.preactExtern=false] Whether to add `import { h } from '\uff20externs/preact'` automatically at the top of each JSX file, and rename preact imports into `\uff20externs/preact` imports. See https://www.npmjs.com/package/\uff20externs/preact. Default `false`.\n */\nconst generateTemp = async (entry, config = {}) => {\n  const {\n    tempDir = 'depack-temp',\n    preact,\n    preactExtern,\n  } = config\n  const cache = {\n    cachedFiles: {\n      [relative('', entry)]: 1,\n    },\n    cachedNodeModules: {},\n  }\n  await processFile(entry, {\n    tempDir, preact, preactExtern,\n  }, cache)\n  const tempFiles = Object.keys(cache.cachedFiles)\n    .map(f => join(tempDir, f))\n  return [...tempFiles, ...Object.keys(cache.cachedNodeModules)]\n}\n\nexport default generateTemp\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_depack.TempConfig} TempConfig Options for generating the temp directory.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _depack.TempConfig Options for generating the temp directory.\n * @prop {string} [tempDir=\"depack-temp\"] The directory in which to place temp files. Default `depack-temp`.\n * @prop {boolean} [preact=false] Whether to add `import { h } from 'preact'` automatically at the top of each JSX file. Default `false`.\n * @prop {boolean} [preactExtern=false] Whether to add `import { h } from '\uff20externs/preact'` automatically at the top of each JSX file, and rename preact imports into `\uff20externs/preact` imports. See https://www.npmjs.com/package/\uff20externs/preact. Default `false`.\n */\n","import { rm } from '@wrote/wrote'\nimport generateTemp from '@depack/bundle'\nimport { join, relative } from 'path'\nimport staticAnalysis, { sort } from 'static-analysis'\nimport { getCommand, updateSourceMaps, hasJsonFiles, createExternsArgs, detectExterns, getBundleArgs } from './'\nimport run from './run'\n\n/**\n * @param {string|!Array<string>} src The path or paths to the entries.\n * @param {boolean} [needsAnalysis] Whether the shallow analysis result needs to be returned.\n */\nexport const doesSrcHaveJsx = async (src, needsAnalysis) => {\n  if (!needsAnalysis && Array.isArray(src)) {\n    if (src.some(endsWithJsx)) return { hasJsx: true }\n  } else if (!needsAnalysis && endsWithJsx(src)) return { hasJsx: true }\n\n  const analysis = await staticAnalysis(src, { shallow: true })\n  const hasJsx = analysis.some(({ entry, name }) => {\n    if (name) return false // return node_modules\n    return endsWithJsx(entry)\n  })\n  return { hasJsx, analysis }\n}\nconst endsWithJsx = (name) => {\n  return name.endsWith('.jsx')\n}\n\n/**\n * Create the temp dir.\n */\nexport const prepareTemp = async (src, { tempDir, preact, preactExtern, forceTemp }) => {\n  let Src = src\n  if (forceTemp) {\n    await generateTemp(src, { tempDir, preact, preactExtern })\n    Src = join(tempDir, src)\n    return { Src, hasJsx: true }\n  }\n  const { hasJsx, analysis } = await doesSrcHaveJsx(src)\n  if (hasJsx) {\n    await generateTemp(src, { tempDir, preact, preactExtern })\n    Src = join(tempDir, src)\n  }\n  return { Src, hasJsx, analysis }\n}\n\n/**\n * Bundle the source code.\n * @param {_depack.BundleConfig} options Options for the web bundler.\n * @param {_depack.RunConfig} [runOptions] General options for running of the compiler.\n * @param {!Array<string>} [compilerArgs] Extra arguments for the compiler, including the ones got with `getOptions`.\n */\nconst Bundle = async (options, runOptions = {}, compilerArgs = []) => {\n  const { src, tempDir = 'depack-temp', preact, preactExtern, silent } = options\n  const { output, compilerVersion, debug, noSourceMap } = runOptions\n  if (!src) throw new Error('Entry file is not given.')\n\n  let deps\n  let processCommonJs\n  let { Src, hasJsx } = await prepareTemp(src, { tempDir, preact, preactExtern })\n\n  const detected = await staticAnalysis(Src, {\n    fields: ['externs'],\n  })\n\n  const { files: detectedExterns } = await detectExterns(detected)\n  const externs = createExternsArgs(detectedExterns)\n\n  const sorted = sort(detected)\n  const {\n    commonJs, commonJsPackageJsons, js, packageJsons,\n  } = sorted\n  const jsonFiles = hasJsonFiles(detected)\n  processCommonJs = Boolean(commonJs.length || jsonFiles.length)\n  deps = [Src, ...commonJs, ...packageJsons,\n    ...js,\n    ...commonJsPackageJsons]\n\n  let sigint = false\n  const getSigInt = () => {\n    return sigint\n  }\n  // process.on('SIGINT', () => {\n  //   sigint = true\n  // })\n  const PreArgs = getBundleArgs(compilerArgs, externs, output, noSourceMap, deps, processCommonJs)\n\n  const jjs = hasJsx ? deps.map((j) => {\n    return j.startsWith(tempDir) ? relative(tempDir, j) : j\n  }) : deps\n  const a = getCommand(PreArgs, jjs)\n  console.error(a)\n  const Args = [...PreArgs, '--js', ...deps]\n\n  const stdout = await run(Args, { debug, compilerVersion, output,\n    noSourceMap, getSigInt })\n  if (!output && stdout && !silent) console.log(stdout)\n  if (hasJsx) {\n    if (!sigint && output && !noSourceMap)\n      await updateSourceMaps(output, tempDir)\n    await rm(tempDir)\n  }\n  return stdout\n}\n\nexport default Bundle\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../compile').BundleConfig} _depack.BundleConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../compile').RunConfig} _depack.RunConfig\n */","import { join, basename, relative, sep } from 'path'\nimport { rm } from '@wrote/wrote'\nimport staticAnalysis, { sort } from 'static-analysis'\nimport { getBundleArgs, updateTempDirArgs, getCommand, unique, createExternsArgs, hasJsonFiles, detectExterns, updateSourceMaps } from './'\nimport run from './run'\nimport { prepareTemp, doesSrcHaveJsx } from './bundle'\n\n/**\n * Bundle the source code into chunks.\n * @param {_depack.ChunksConfig} options Options for the web bundler.\n * @param {_depack.RunConfig} [runOptions] General options for running of the compiler.\n * @param {!Array<string>} [compilerArgs] Extra arguments for the compiler, including the ones got with `getOptions`.\n */\nexport default async function BundleChunks(options, runOptions, compilerArgs = []) {\n  const { srcs, tempDir = 'depack-temp', preact, preactExtern, checkCache,\n    rel } = options\n  const { output = '', compilerVersion, debug, noSourceMap } = runOptions\n  if (!srcs) throw new Error('Entry files are not given.')\n  if (!Array.isArray(srcs)) throw new Error('Expecting an array of source files to generate chunks.')\n\n  let deps = []\n  let processCommonJs = false\n  let { hasJsx, analysis } = await doesSrcHaveJsx(srcs, true)\n  if (checkCache) {\n    const res = await checkCache(analysis)\n    if (res) return\n  }\n  // If one has jsx, create temp for all.\n  // @depack/bundle needs updating to reference src JS files and create\n  // temp only for JSX.\n  let detectedExterns = []\n  // const chunks = []\n\n  const chunksMap = {}\n  // a map where source name is key and its dependencies are value\n  const map = await srcs.reduce(async (acc, src) => {\n    acc = await acc\n    const { Src } = await prepareTemp(src, { tempDir, preact, preactExtern, forceTemp: hasJsx })\n\n    const detected = await staticAnalysis(Src, {\n      fields: ['externs'],\n    })\n\n    const { files: de } = await detectExterns(detected)\n    detectedExterns = [...detectedExterns, ...de]\n\n    const sorted = sort(detected)\n    const {\n      commonJs, commonJsPackageJsons, js, packageJsons,\n    } = sorted\n\n    const jsonFiles = hasJsonFiles(detected)\n    processCommonJs = processCommonJs || Boolean(commonJs.length || jsonFiles.length)\n\n    const sd = [...commonJs, ...packageJsons, ...js, ...commonJsPackageJsons]\n    deps = [...deps, ...sd]\n\n    acc[Src] = sd\n    return acc\n  }, {})\n\n  const depsMap = deps.reduce((acc, current) => {\n    if (!acc[current]) acc[current] = 1\n    else acc[current]++\n    return acc\n  }, {})\n  const commonChunk = Object.entries(depsMap).reduce((acc, [key, value]) => {\n    if (value > 1) {\n      acc.push('--js', key)\n      // commonChunk['common'] = join(output, 'common.js')\n    }\n    return acc\n  }, [])\n\n  const outputFiles = []\n  if (commonChunk.length) {\n    commonChunk.push('--chunk', `common:${commonChunk.length/2}`)\n    // 'common:auto')\n    outputFiles.push(join(output, 'common.js'))\n  }\n  const Rel = hasJsx && rel ? join(tempDir, rel) : rel\n  const chunks = Object.entries(map).reduce((acc, [key, value]) => {\n    const chunkDeps = value.filter(v => depsMap[v] == 1)\n    const c = chunkDeps.reduce(addJsArg, [])\n    const n = Rel ? relative(Rel, key) : basename(key)\n    const name = n.replace(/.jsx$/, '.js').replace(sep, '-')\n    const cu = [name.replace('.js', ''), chunkDeps.length + 1]\n    if (chunkDeps.length != value.length) {\n      chunksMap[name] = ['common']\n      cu.push('common')\n    }\n    acc.push(...c, '--js', key, '--chunk', cu.join(':'))\n    const file = join(output, name)\n    outputFiles.push(file)\n    return acc\n  }, [])\n\n  const externs = createExternsArgs(detectedExterns.filter(unique))\n\n  const PreArgs = getBundleArgs(compilerArgs, externs, output, noSourceMap, deps, processCommonJs)\n  // const jjs = hasJsx ?\n  const depsAndChunks = [...commonChunk, ...chunks]\n  const a = getCommand(PreArgs, updateTempDirArgs(depsAndChunks, tempDir))\n  console.error(a)\n  const Args = [...PreArgs, ...depsAndChunks]\n\n  const stdout = await run(Args, { debug, compilerVersion, output,\n    noSourceMap, outputFiles })\n  if (!output && stdout) console.log(stdout)\n\n  if (hasJsx) {\n    if (output && !noSourceMap)\n      await Promise.all(outputFiles.map(async (o) => {\n        await updateSourceMaps(o, tempDir)\n      }))\n    await rm(tempDir)\n  }\n  return chunksMap\n}\n\nexport const addJsArg = (a, v) => [...a, '--js', v]\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../compile').ChunksConfig} _depack.ChunksConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../compile').RunConfig} _depack.RunConfig\n */","import { read } from '@wrote/wrote'\n\nexport { default as Compile } from './lib/compile'\nexport { default as Bundle } from './lib/bundle'\nexport { default as BundleChunks } from './lib/chunks'\nexport { default as run } from './lib/run'\nexport { default as getOptions, getOutput } from './lib/get-options'\n\n/**\n * If the `GOOGLE_CLOSURE_COMPILER` was set using the environment variable, it will be returned in this named exported.\n */\nconst GOOGLE_CLOSURE_COMPILER = process.env['GOOGLE_CLOSURE_COMPILER']\n\nexport { GOOGLE_CLOSURE_COMPILER }\n\n/**\n * If `GOOGLE_CLOSURE_COMPILER` was set using an environment variable, returns `target`, otherwise reads the version from the `google-closure-compiler-java` package.json file.\n */\nexport const getCompilerVersion = async () => {\n  /** @type {string} */\n  let compilerVersion = 'target'\n  const compilerPackage = GOOGLE_CLOSURE_COMPILER ? 'target' : require.resolve('google-closure-compiler-java/package.json')\n\n  if (!GOOGLE_CLOSURE_COMPILER) {\n    const compilerPackageJson = await read(compilerPackage)\n    const { 'version': cv } = JSON.parse(compilerPackageJson)\n    ;[compilerVersion] = cv.split('.')\n  }\n  return compilerVersion\n}","/**\n * @license\n * @depack/depack: Depack Node.JS API for Closure Compiler execution.\n *\n * Copyright (C) 2019 Art Deco\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport '../types/externs'\nimport { Compile, Bundle, BundleChunks, run, getOptions, getOutput, getCompilerVersion, GOOGLE_CLOSURE_COMPILER } from './'\n\nmodule.exports = {\n  '_Compile': Compile,\n  '_Bundle': Bundle,\n  '_BundleChunks': BundleChunks,\n  '_run': run,\n  '_getOptions': getOptions,\n  '_getOutput': getOutput,\n  '_getCompilerVersion': getCompilerVersion,\n  '_GOOGLE_CLOSURE_COMPILER': GOOGLE_CLOSURE_COMPILER,\n}","import { join, basename, sep } from 'path'\n\nconst getLanguage = (l) => {\n  if (/^\\d+$/.test(l)) return `ECMASCRIPT_${l}`\n  return l\n}\n\n/**\n * Returns the arguments for the compiler.\n * @param {!_depack.GetOptions} [opts] Parameters for `getOptions`. https://github.com/google/closure-compiler/wiki/Flags-and-Options\n */\nconst getOptions = (opts = {}) => {\n  const {\n    compiler = require.resolve('google-closure-compiler-java/compiler.jar'),\n    output, level, advanced, languageIn, languageOut, sourceMap = true,\n    argv = [], prettyPrint, noWarnings, debug, iife, chunkOutput,\n  } = opts\n  /** @type {!Array<string>} */\n  const options = ['-jar', compiler]\n  if (level) {\n    options.push('--compilation_level', level)\n  } else if (advanced) {\n    options.push('--compilation_level', 'ADVANCED')\n  }\n  if (languageIn) {\n    const lang = getLanguage(languageIn)\n    options.push('--language_in', lang)\n  }\n  if (languageOut) {\n    const lang = getLanguage(languageOut)\n    options.push('--language_out', lang)\n  }\n  if ((output || chunkOutput) && sourceMap && !debug) {\n    options.push('--create_source_map', '%outname%.map',\n      // '--source_map_include_content'\n    )\n  }\n  if (prettyPrint) {\n    options.push('--formatting', 'PRETTY_PRINT')\n  }\n  if (debug) {\n    options.push('--print_source_after_each_pass')\n  }\n  if (iife) {\n    options.push('--isolation_mode', 'IIFE')\n  }\n  if (noWarnings || debug) {\n    options.push('--warning_level', 'QUIET')\n  }\n  options.push(...argv)\n  if (output) {\n    options.push('--js_output_file', output)\n  }\n  if (chunkOutput) {\n    options.push('--chunk_output_path_prefix', join(chunkOutput, sep))\n  }\n  return options\n}\n\n/**\n * Returns the location of the output file, even when the directory is given.\n * @param {string} output\n * @param {string} src\n */\nexport const getOutput = (output, src) => {\n  let o = /\\.js$/.test(output) ? output : join(output, basename(src))\n  o = o.replace(/jsx$/, 'js')\n  return o\n}\n\nexport default getOptions\n\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../compile').GetOptions} _depack.GetOptions\n */"],
"names":["chmod","fs","createReadStream","createWriteStream","lstat","mkdir","readdir","rmdir","unlink","$jscompDefaultExport","stream","Transform","Writable","getStackSegment","stack","from","oneLine","splitStack","split","undefined","item","length","slice","items","join","getEntryStack","transparent","stackSegment","getCallerFromArguments","args","caller","homedir","os","extractPathRegex","pathRegex","homeDir","cleanStack","pretty","ignoredModules","j","re","RegExp","source","replace","filter","x","pathMatches","match","includes","test","trim","map","m","p1","makeCallback","entryCaller","entryStack","shadow","cb","messageOrError","arguments","errorStack","Error","calleeStackLine","message","isError","stackMessage","stackHeading","Object","assign","e","properties","erotic","pipeError","streamA","streamB","once","emit","Catchment","options","binary","rs","opts","er","proxyError","wrap","_","_caughtData","_promise","Promise","r","on","d","Buffer","concat","indexOf","pipe","chunk","encoding","callback","push","collect","readable","promise","res","read","path","write","data","ws","err","end","makePromise","fn","resolveValue","fnLength","name","resolve","reject","error","allArgs","Array","isArray","basename","dirname","parse","relative","sep","ensurePath","dir","make","code","parentDir","lstatFiles","dirPath","dirContent","readFiles","relativePath","ls","all","isDirectory","lstatRes","isNotDirectory","readDirStructure","ignore","lsr","directories","files","notDirectories","reduce","acc","current","isFile","isSymbolicLink","type","dirs","rel","structure","content","removeFile","removeDir","keys","k","filesFullPaths","file","dirsFullPaths","rm","s","exists","colors","backgroundColors","c","string","color","cc","b","builtinModules","_module","resolveDependency","relativeFrom","isDir","checkSources","fileChecked","fileRes","endsWith","startsWith","pp","mismatch","o","p","capturedGroup","i","key","start","RE","RE2","RE3","RE4","getMatches","a","scope","paths","ROOT","findPackageJson","process","cwd","fields","soft","fold","findEntry","entryExists","main","entry","version","packageName","rest","result","packageJson","hasMain","f","mod","JSON","resolved","indexExists","checkIfLib","modName","getDependenciesMeta","matches","pckg","proms","internal","isLib","package","n","console","warn","v","parseInt","Boolean","detect","cache","nodeModules","shallow","node_modules_cache","mergeSameNodeModules","requireMatches","getRequireMatches","fm","fr","dm","forEach","val","required","deps","Deps","existing","discovered","entries","accRes","staticAnalysis","config","detected","filtered","findIndex","fi","ii","ei","ee","ff","froms","el","newF","props","sort","packageJsons","commonJsPackageJsons","commonJs","js","internals","pad","width","repeat","Math","max","paddys","w","l","bind","frameOfMind","padding","ww","bt","bb","line","replaceWithColor","str","background","bef","getCommand","getShellCommand","jss","addData","sourceMap","rr","removeStrict","wrapper","noStrict","prepared","prepareOutput","output","wp","actualOutput","hasUseStrict","ao","aw","updateSourceMaps","tempDir","sources","newSources","jj","stringify","getWrapper","hasJsonFiles","DEPACK_MAX_COLUMNS","env","maxLength","stderr","columns","lastLineLength","program","checkExternsExist","exist","detectExterns","nodeJS","externs","actual","createExternsArgs","unique","updateTempDirArgs","getBundleArgs","compilerArgs","noSourceMap","processCommonJs","makeError","exitCode","se","t","getCoreVersion","VER","V","log","prepareCoreModules","nodeModulesPath","force","corePath","require","getCorePath","index","ret","depackExist","testDepack","core","testPackage","depack","fixDependencies","commonJS","modules","dep","field","M","newM","relPath","$indicatrix","text","interval","writable","stdout","placeholder","int","setInterval","clearInterval","spawn","child_process","getPromise","proc","spawnCommand","command","run","debug","compilerVersion","outputFiles","compilerStderr","outputFile","printCommand","sorted","fjs","filterNodeModule","cjs","warnOfCommonJs","analysis","fromSrc","detection","find","getCompatWarning","mx","isTTY","frame","getNodeExterns","additional","getExternsDir","externsDeps","externsDir","internalExterns","allInternals","Script","vm","findPosition","input","h","l2","detectJSX","bl","checkRule","reObject","hasRe","replacement","hideStack","commonError","thrownError","commonLine","substr","li","lastIndexOf","SyncReplaceable","rules","_broke","Acc","call","brake","replace.brake","getDefaultRegExp","toUpperCase","getDefaultReplacement","makeMarkers","matchers","getReplacement","getRegex","regExp","lastIndex","marker","makePasteRule","pipeRules","rule","pr","makeCutRule","replaceable","Replaceable","_options","context","Replaceable$$module$node_modules$restream$src$Replaceable.replace","promises","shift","next","Stream","getTagName","tagName","exec","getProps","positions","closing","opening","open","close","obj","destructuring","whitespace","lastClose","before","wsBefore","propName","wsBeforeAssign","afterAssign","beforeAssign","beforeOrNot","plain","getPlain","whatsLeft","wsAfterAssign","q","makeObjectBody","quoteProps","beforeCloseWs","kk","isComponentName","pragma","children","cn","tn","qp","prev","comma","findEnding","contentEnd","preString","extract","stringWithTag","arrow","selfClosing","ExtractedJSX","contentStart","stringEnd","opensClosing","untilEnd","ce","tSelfClosing","string2","getQuoted","_b","_a","parseSimpleContent","temps","expressionStack","jsxStack","isExpression","to","expression","extractedJsx","getTemps","lastTo","ar","transpileJSX","position","parseContent","after","ld","newRes","contents","jsx","part","strBefore","strAfter","defObj","ef","ias","tt","as","BundleTransform","_nodeModules","css","_deps","preactExtern","pre","actualPath","foundLinked","dot","processFile","cachedNodeModules","cachedFiles","preact","isJSX","T","transformed","transpiled","transpile","found","tto","depPaths","nm","dp","sa","cssTo","depPath","generateTemp","tempFiles","doesSrcHaveJsx","src","needsAnalysis","some","endsWithJsx","hasJsx","prepareTemp","forceTemp","Src","addJsArg","GOOGLE_CLOSURE_COMPILER","module","exports","Compile","runOptions","verbose","silent","foundAdditional","realCompilerArgs","detectedExterns","detectedExternsArgs","internalDeps","jsonFiles","Args","hasRequired","Bundle","PreArgs","jjs","getSigInt","sigint","BundleChunks","srcs","checkCache","chunksMap","de","sd","depsMap","commonChunk","value","Rel","chunks","chunkDeps","cu","depsAndChunks","getOptions","compiler","level","advanced","languageIn","languageOut","argv","prettyPrint","noWarnings","iife","chunkOutput","lang","getOutput","getCompilerVersion","compilerPackage","compilerPackageJson","cv"]
}
